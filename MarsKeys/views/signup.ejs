<!DOCTYPE html>
<html lang="ko">
<head>
  <title>회원가입 | BlindLove</title>
  <link rel="stylesheet" href="/assets/css/signup.css" />
  <%- include('partials/head') %> 
  <style>
    .notice-text {
      text-align: center;
      color: #c00;
      font-size: 1rem;
      margin-bottom: 1.5rem;
      font-weight: bold;
    }

    .notice-wrap {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding: 0 0.5rem;
}

.notice-text {
  color: #c00;
  font-weight: bold;
  font-size: 1rem;
  margin: 0;
}

.back-home-link {
  font-size: 0.9rem;
  color: #0077cc;
  text-decoration: none;
}

.back-home-link:hover {
  text-decoration: underline;
}
  </style>
</head>
<body class="no-fixed-footer">

  <div class="signup-container hologram-border">
    <div class="glow-ball"></div>
    <div class="logo-wrap">
      <img src="/assets/images/logo.svg" alt="BlindLove 로고" />
    </div>

    <div class="notice-wrap">
      <h2 class="notice-text">아직 서비스 시작 전입니다</h2>
      <a href="/" class="back-home-link">홈페이지로 돌아가기</a>
    </div>

    <% if (error) { %>
      <div class="error-msg"><%= error %></div>
    <% } %>

    <form action="/signup" method="POST" onsubmit="return false;">
        <div class="input-with-button">
          <input type="text" name="username" placeholder="닉네임" required disabled />
          <button type="button" class="check-btn" disabled>중복확인</button>
        </div>
        <div id="nickname-msg" class="check-msg"></div>
      
        <div class="input-with-button">
          <input type="text" name="user_id" placeholder="아이디" required disabled />
          <button type="button" class="check-btn" disabled>중복확인</button>
        </div>
        <div id="id-msg" class="check-msg"></div>
      
        <input type="email" name="email" placeholder="이메일 (선택사항)" disabled />
        <input type="password" name="password" placeholder="비밀번호" required disabled />
        <button type="submit" class="signup-btn" disabled>가입하기</button>
    </form>

    <div class="extra">
      이미 계정이 있으신가요? <a href="/login">로그인</a>
    </div>
  </div>

  <%- include('partials/footer') %>
  <%- include('partials/scripts') %>

  <script>
    function checkId() {
      return; // 서비스 비활성화 중
    }

    function checkNickname() {
      return; // 서비스 비활성화 중
    }
  </script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const ball = document.querySelector(".glow-ball");
    const container = document.querySelector(".signup-container");
  
    if (!ball || !container) return;
  
    container.style.position = 'relative';
  
    let t = 0;
    const speed = 5; // 속도 조절
    const offsetX = -6; // x축 이동량
    const offsetY = -6; // y축 이동량

    // ✅ 궤도 위치 계산 함수
    const getPosition = (t) => {
      const w = container.clientWidth - 2.5;
      const h = container.clientHeight - 3;
      const perimeter = 2 * (w + h);
      const dist = (t * speed) % perimeter;

      let x, y;
      if (dist < w) {
        x = dist;
        y = 0;
      } else if (dist < w + h) {
        x = w;
        y = dist - w;
      } else if (dist < 2 * w + h) {
        x = w - (dist - (w + h));
        y = h;
      } else {
        x = 0;
        y = h - (dist - (2 * w + h));
      }

      return { x, y };
    };

// ✅ 처음 위치 한번 미리 지정
const { x: initX, y: initY } = getPosition(t);
ball.style.left = `${initX + offsetX}px`;
ball.style.top = `${initY + offsetY}px`;

// 💡 다음 렌더 프레임에서 opacity 주기
requestAnimationFrame(() => {
  ball.style.opacity = 1; // ✅ 초기 위치 지정 후 공 나타나게
});

    // ✅ 애니메이션 시작
    const updatePosition = () => {
      const { x, y } = getPosition(t);
      ball.style.left = `${x + offsetX}px`;
      ball.style.top = `${y + offsetY}px`;

      t += 1;
      requestAnimationFrame(updatePosition);
    };

    updatePosition();
  });
</script>
</body>
</html>
