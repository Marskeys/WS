<!doctype html>
<html lang="ko">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Mars Keys — Counter to Welcome</title>

  <!-- Google Font: Michroma -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Michroma&display=swap" rel="stylesheet">

  <style>
    :root{
      --bg:#0e1016; 
      --text:#eef2f8; 
      --muted:#9aa3b2;
      --fill:0%; /* 글자 채워진 비율(=퍼센트와 완전 동기화) */
      --pastel-red-1:#ff8aa1; --pastel-blue-1:#78aaff;
    }
    *{box-sizing:border-box}
    body{
      margin:0; background:var(--bg); color:var(--text);
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
      overflow-x:hidden;
      overflow-y:hidden; /* 초기엔 스크롤 잠금 → 애니 후 auto */
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    /* ===== Hero (단일 컬럼) ===== */
    .wrap{
      position:relative;
      min-height:100vh;
      padding:5vw;
      overflow:visible; /* 텍스트/입자 오버플로 허용 */
    }

    /* ===== 브랜드 타이포 ===== */
    .brand{
      margin:0; line-height:1; /* descender 잘리지 않게 1로 */
      font-family:"Michroma", system-ui, sans-serif;
      letter-spacing:0.5px;
    }
    .brand-line{
      position:relative; display:block;
      font-size:clamp(56px,14vw,200px);
      padding-bottom:0.18em; /* 'y' 같은 내림(Descender) 확보 */
    }
    .plain{position:relative; z-index:1;}
    .fill{
      position:absolute; left:0; top:-0.12em; bottom:-0.12em; /* 수직 오버스캔 */
      width:var(--fill); overflow:hidden; z-index:2;
      will-change: width;
    }
    .fill > span{
      display:block; color:transparent; 
      -webkit-background-clip:text; background-clip:text;
    }
    .brand-line[data-c="red"]  .fill > span{background-image:linear-gradient(180deg,var(--pastel-red-1),#ff6b7a,#ff9db0);}
    .brand-line[data-c="blue"] .fill > span{background-image:linear-gradient(180deg,var(--pastel-blue-1),#5ea1ff,#b2d1ff);}
    .tagline{
      font-size:clamp(16px,2.6vw,28px); font-weight:600; margin:1rem 0 0; color:var(--muted);
    }

    /* ===== 퍼센트: ‘Mars Keys’ 다음 줄, 우측 정렬 ===== */
    #counter{
      display:block;
      margin-top:0.6rem;
      text-align:right;
      font-size:clamp(28px,7vw,96px); /* 본문보다 살짝 작게 */
      font-family:"Michroma", system-ui, sans-serif;
      font-weight:900;
      color:white;
      text-shadow:0 0 10px rgba(255,255,255,0.5);
      user-select:none;
      pointer-events:none;
      transition:opacity .6s ease;
    }

    /* ===== 파티클 ===== */
    .particles{position:absolute; inset:0; pointer-events:none; overflow:visible;}
    .particle{
      position:absolute; width:2px; height:2px; border-radius:50%;
      /* 글로우(각 파티클마다 drop-shadow 적용) → JS에서 색상 연동 */
    }
    .brand-line.dissolve .plain,.brand-line.dissolve .fill{opacity:0;}

    /* ===== Welcome: 뷰포트 고정(잘림 완전 방지) ===== */
    #welcome{
      position:fixed; left:50%; top:50%;
      transform:translate(-50%,-50%) scale(0.8);
      opacity:0;
      font-size:clamp(60px,12vw,180px);
      font-family:"Michroma", system-ui, sans-serif;
      color:white;
      letter-spacing:0.02em;
      transition:opacity 1s ease, transform 1s cubic-bezier(.2,.7,.2,1);
      will-change:opacity, transform;
      pointer-events:none;
      z-index:999; /* 어떤 레이아웃에도 가려지지 않게 */
    }
    #welcome.visible{
      opacity:1;
      transform:translate(-50%,-50%) scale(1.45);
    }

    /* ===== 이후 스크롤 콘텐츠 ===== */
    .scrollable-content{
      padding:0 5vw 6rem; 
      text-align:center; 
      display:none; /* 터진 뒤 노출 */
      max-width:1200px; margin:0 auto;
    }
    .scrollable-content p{
      max-width:800px; margin:0 auto 1.5rem; line-height:1.8; 
      color:var(--muted); font-size:clamp(14px,2vw,18px);
    }
    .scrollable-content .temp-box{
      background:rgba(255,255,255,0.05); border-radius:12px; padding:2rem; margin:2rem auto; max-width:900px;
    }

    /* ===== 모바일: 퍼센트는 오른쪽 하단 작게 ===== */
    @media (max-width: 768px){
      #counter{
        position:absolute; right:6vw; bottom:6vw;
        margin-top:0; text-align:right;
        font-size:clamp(24px,12vw,72px);
      }
    }
  </style>
</head>
<body>
  <main class="wrap">
    <canvas id="textCanvas" style="display:none;"></canvas>

    <h1 class="brand">
      <span class="brand-line" data-c="red">
        <span class="plain">Mars</span>
        <span class="fill"><span>Mars</span></span>
        <div class="particles"></div>
      </span>
      <span class="brand-line" data-c="blue">
        <span class="plain">Keys</span>
        <span class="fill"><span>Keys</span></span>
        <div class="particles"></div>
      </span>
    </h1>

    <!-- 퍼센트: 바로 다음 줄 / 우측 정렬 -->
    <div id="counter" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">0%</div>

    <p class="tagline">Video Game Music Studio</p>
  </main>

  <!-- Welcome: 고정 오버레이 (절대 안 잘림) -->
  <div id="welcome">Welcome</div>

  <div id="scrollContent" class="scrollable-content">
    <p>게임 음악 스튜디오 Mars Keys에 오신 것을 환영합니다...</p>
    <div class="temp-box"><h3>우리의 서비스</h3><p>게임 OST, SFX, VO, 인터랙티브 음악 시스템...</p></div>
    <div class="temp-box"><h3>포트폴리오</h3><p>RPG, SF 어드벤처 등...</p></div>
    <div class="temp-box"><h3>문의</h3><p>협업 및 프로젝트 문의는 언제든지 환영합니다.</p></div>
    <div style="height:60vh;"></div>
    <div class="temp-box"><p>마지막 임시 콘텐츠</p></div>
  </div>

  <script>
  (function(){
    const html=document.documentElement;
    const body=document.body;
    const counterEl=document.getElementById("counter");
    const welcome=document.getElementById("welcome");
    const scrollContent=document.getElementById("scrollContent");

    // 진행도(0~1). 이 값 하나로 "채움 폭"과 "퍼센트"를 완벽 동기화
    let p=0;
    const accel=0.0018;
    let particles=[], particlesGenerated=false;
    let autoAnimating=false, isFinalized=false;

    function setProgress(v){
      p=Math.max(0,Math.min(1,v));
      const pct = Math.round(p*100);          // 시각 정확도 ↑ (반올림)
      html.style.setProperty('--fill', pct+'%');  // 글자 채움 = 퍼센트
      if(!isFinalized){
        counterEl.textContent = pct + "%";
        counterEl.setAttribute('aria-valuenow', String(pct));
      }
      if(p>=1 && !particlesGenerated && !isFinalized){
        generateParticles(); 
        dissolveText(); 
        showWelcome();
      }
    }

    function startAutoAnimation(){
      if(autoAnimating||isFinalized) return;
      autoAnimating=true;
      function step(){
        if(p<1){ p = Math.min(1, p+0.005); setProgress(p); requestAnimationFrame(step); }
        else { autoAnimating=false; }
      }
      step();
    }

    // ===== 파티클 생성 (캔버스 → 픽셀 샘플링) =====
    function generateParticles(){
      particlesGenerated=true; particles=[];
      const canvas=document.getElementById('textCanvas');
      const ctx=canvas.getContext('2d',{willReadFrequently:true});
      document.querySelectorAll('.brand-line').forEach(line=>{
        const text=line.querySelector('.plain').textContent;
        const style=getComputedStyle(line.querySelector('.plain'));
        const fontSize=parseFloat(style.fontSize);
        const fontFamily=style.fontFamily;

        // descender 보존을 위해 캔버스 높이 넉넉히
        const w=Math.ceil(line.offsetWidth);
        const h=Math.ceil(fontSize*1.35);  // 내림 공간 확보
        canvas.width=w; canvas.height=h;

        ctx.clearRect(0,0,w,h);
        ctx.font=`${fontSize}px ${fontFamily}`; // Michroma: 단일 weight
        ctx.textBaseline='alphabetic';
        ctx.fillStyle='white';
        ctx.fillText(text, 0, fontSize); // baseline = fontSize 근처

        const img=ctx.getImageData(0,0,w,h).data;
        const density=4; // 성능/디테일 트레이드오프
        for(let y=0;y<h;y+=density){
          for(let x=0;x<w;x+=density){
            const idx=(y*w+x)*4;
            if(img[idx+3]>128){
              particles.push({
                x, y,
                vx:(Math.random()-0.5)*2,
                vy:(Math.random()-0.5)*2,
                alpha:1,
                color:line.dataset.c,
                container:line.querySelector('.particles')
              });
            }
          }
        }
      });
    }

    // ===== 파티클 애니 + 글로우 =====
    function dissolveText(){
      document.querySelectorAll('.brand-line').forEach(l=>l.classList.add('dissolve'));
      function animate(){
        document.querySelectorAll('.particles').forEach(pc=>pc.innerHTML='');
        particles.forEach(pt=>{
          if(pt.alpha>0){
            const el=document.createElement('div');
            el.className='particle';
            el.style.left=pt.x+'px'; 
            el.style.top=pt.y+'px';
            el.style.opacity=pt.alpha;
            el.style.backgroundColor=`var(--pastel-${pt.color}-1)`;
            // 글로우: 컬러 drop-shadow 두 단계
            el.style.filter = `drop-shadow(0 0 6px var(--pastel-${pt.color}-1))
                               drop-shadow(0 0 14px var(--pastel-${pt.color}-1))`;
            pt.container.appendChild(el);

            pt.x+=pt.vx; pt.y+=pt.vy; 
            pt.vx*=1.02; pt.vy*=1.02; 
            pt.alpha-=0.004;
          }
        });
        if(particles.some(pt=>pt.alpha>0)) requestAnimationFrame(animate);
      }
      animate();
    }

    function showWelcome(){
      // 카운터 서서히 숨김 → Welcome(고정 오버레이) 등장 → 스크롤 활성화
      setTimeout(()=>{ counterEl.style.opacity=0; }, 400);
      setTimeout(()=>{ welcome.classList.add("visible"); }, 1000);
      setTimeout(()=>{
        scrollContent.style.display="block";
        isFinalized=true; 
        body.style.overflowY="auto";
      }, 1600);
    }

    // ===== 입력(휠/터치) =====
    function onWheel(e){
      if(isFinalized) return;
      const dy=e.deltaY;
      if(p<0.5){
        e.preventDefault(); 
        setProgress(p+dy*accel); 
        if(p>=0.5) startAutoAnimation();
      }else{
        e.preventDefault(); 
        if(!autoAnimating) startAutoAnimation();
      }
    }
    function onTouchMove(e){
      if(isFinalized) return;
      const touch=e.touches[0]; 
      const currentY=touch.clientY;
      if(typeof onTouchMove.lastY!=="undefined"){
        const dy=onTouchMove.lastY-currentY;
        if(dy>0&&p<0.5){
          e.preventDefault(); 
          setProgress(p+dy*accel*2); 
          if(p>=0.5) startAutoAnimation();
        } else if(dy>0&&p>=0.5&&!autoAnimating){
          e.preventDefault(); 
          startAutoAnimation();
        }
      }
      onTouchMove.lastY=currentY;
    }
    function onTouchEnd(){ if(!isFinalized){ onTouchMove.lastY=undefined; } }

    window.addEventListener('wheel',onWheel,{passive:false});
    window.addEventListener('touchstart',(e)=>{onTouchMove.lastY=e.touches[0].clientY;});
    window.addEventListener('touchmove',onTouchMove,{passive:false});
    window.addEventListener('touchend',onTouchEnd);

    setProgress(0);
  })();
  </script>
</body>
</html>
