<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Poki Style Grid</title>
    <link rel="stylesheet" href="/marskeys.css">
</head>
<body>
    <div id="grid-container"></div>

    <script>
        const gridContainer = document.getElementById('grid-container');
        const availableSizes = [50, 75, 100, 125, 150]; // 정사각형의 가능한 크기 (px)
        const colors = ['#FFC107', '#E91E63', '#9C27B0', '#2196F3', '#4CAF50', '#FF5722']; // 정사각형 색상

        function getRandomSize() {
            return availableSizes[Math.floor(Math.random() * availableSizes.length)];
        }

        function getRandomColor() {
            return colors[Math.floor(Math.random() * colors.length)];
        }

        function createGrid() {
            gridContainer.innerHTML = ''; // 기존 그리드 초기화
            const containerWidth = window.innerWidth;
            const containerHeight = window.innerHeight;
            let currentX = 0;
            let currentY = 0;

            while (currentY < containerHeight) {
                let rowHeight = 0;
                let tempX = currentX;
                while (tempX < containerWidth) {
                    const size = getRandomSize();
                    if (currentY + size > containerHeight && tempX === currentX) {
                        // 현재 행에서 더 이상 채울 공간이 없으면 다음 행으로 넘어감
                        break;
                    }

                    const gridItem = document.createElement('div');
                    gridItem.classList.add('grid-item');
                    gridItem.style.width = `${size}px`;
                    gridItem.style.height = `${size}px`;
                    gridItem.style.backgroundColor = getRandomColor();
                    gridItem.style.left = `${tempX}px`;
                    gridItem.style.top = `${currentY}px`;

                    gridContainer.appendChild(gridItem);

                    tempX += size;
                    rowHeight = Math.max(rowHeight, size);
                }
                currentY += rowHeight;
                currentX = 0; // 다음 행 시작 시 X 좌표 초기화
            }
        }

        // 초기 로드 시 그리드 생성
        window.addEventListener('load', createGrid);
        // 윈도우 크기 변경 시 그리드 재생성 (반응형 대응)
        window.addEventListener('resize', createGrid);
    </script>
</body>
</html>