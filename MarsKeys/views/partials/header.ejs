<header class="sticky-header" id="stickyHeader">
  <nav class="mk-nav">
    <a href="#youtube" class="nav-icon" title="YouTube">
      <i class="fab fa-youtube"></i>
    </a>
    <a href="#soundcloud" class="nav-icon" title="SoundCloud">
      <i class="fab fa-soundcloud"></i>
    </a>
    <a href="#instagram" class="nav-icon" title="Instagram">
      <i class="fab fa-instagram"></i>
    </a>
    <a href="#lessons" class="nav-icon" title="교육">
      <i class="fas fa-chalkboard-teacher"></i>
    </a>
    <a href="#experiments" class="nav-icon" title="실험">
      <i class="fas fa-vial"></i>
    </a>
  </nav>
</header>

<header class="mk-header" id="mainHeader">
  <div class="logo-wrapper" id="logoWrapper">
      <object id="logo" type="image/svg+xml" data="/assets/images/logo.svg"></object>
  </div>

  <nav class="mk-nav">
    <a href="#youtube" class="nav-icon" title="YouTube">
      <i class="fab fa-youtube"></i>
    </a>
    <a href="#soundcloud" class="nav-icon" title="SoundCloud">
      <i class="fab fa-soundcloud"></i>
    </a>
    <a href="#instagram" class="nav-icon" title="Instagram">
      <i class="fab fa-instagram"></i>
    </a>
    <a href="#lessons" class="nav-icon" title="교육">
      <i class="fas fa-chalkboard-teacher"></i>
    </a>
    <a href="#experiments" class="nav-icon" title="실험">
      <i class="fas fa-vial"></i>
    </a>
  </nav>
</header>



<script>
  const obj = document.getElementById('logo');
  obj.addEventListener('load', () => {
    const svgDoc = obj.contentDocument;

    const getAll = (prefix, count) =>
      Array.from({ length: count }, (_, i) => svgDoc.getElementById(`${prefix}_${i + 1}`)).filter(Boolean);

    const fadeIn = (elements, duration = 1000, targetColor = 'white') => {
      let t = 0;
      const step = 16 / duration;

      const animate = () => {
        t += step;
        if (t > 1) t = 1;

        const color = `rgba(255,255,255,${t})`;
        elements.forEach(el => el.setAttribute('fill', targetColor.startsWith('rgba') ? targetColor : color));

        if (t < 1) requestAnimationFrame(animate);
      };
      animate();
    };

    // ✅ 필터 정의
    const defs = svgDoc.querySelector('defs') || svgDoc.createElementNS("http://www.w3.org/2000/svg", "defs");

    // glow 파란 글로우
    const glowBlue = document.createElementNS("http://www.w3.org/2000/svg", "filter");
    glowBlue.setAttribute("id", "glow-blue");
    glowBlue.innerHTML = `
      <feDropShadow dx="0" dy="0" stdDeviation="4" flood-color="deepskyblue" flood-opacity="1"/>
    `;
    defs.appendChild(glowBlue);

    // keys용 보라 글로우
    const glowPurple = document.createElementNS("http://www.w3.org/2000/svg", "filter");
    glowPurple.setAttribute("id", "glow-purple");
    glowPurple.innerHTML = `
      <feDropShadow dx="0" dy="0" stdDeviation="4" flood-color="#a066ff" flood-opacity="1"/>
    `;
    defs.appendChild(glowPurple);

    svgDoc.documentElement.insertBefore(defs, svgDoc.documentElement.firstChild);

    // ✅ human_1~5 + eyebrow 페이드인
    const humans = getAll('human', 5);
    const eyebrow = svgDoc.getElementById('eyebrow');
    fadeIn([...humans, eyebrow]);

    // ✅ eyebrow 위아래 움직임
    if (eyebrow) {
      const move = svgDoc.createElementNS("http://www.w3.org/2000/svg", "animateTransform");
      move.setAttribute('attributeName', 'transform');
      move.setAttribute('type', 'translate');
      move.setAttribute('values', '0,-2; 0,2; 0,-2');
      move.setAttribute('dur', '1s');
      move.setAttribute('repeatCount', 'indefinite');
      eyebrow.appendChild(move);
    }

    // ✅ glow 페이드인 후 점멸 반복
    const glow = svgDoc.getElementById('glow');
    if (glow) {
      glow.setAttribute('filter', 'url(#glow-blue)');
      let t = 0;
      let increasing = true;

      function glowLoop() {
        t += increasing ? 0.01 : -0.01;
        if (t >= 1) {
          t = 1;
          increasing = false;
          glow.removeAttribute('filter');
        } else if (t <= 0) {
          t = 0;
          increasing = true;
          glow.setAttribute('filter', 'url(#glow-blue)');
        }

        const r = Math.floor(200 - t * 20);
        const g = Math.floor(230 - t * 10);
        const b = 255;
        const fill = `rgb(${r}, ${g}, ${b})`;
        const children = glow.querySelectorAll('*');
        children.forEach(el => el.setAttribute('fill', fill));
        glow.setAttribute('fill', fill);

        requestAnimationFrame(glowLoop);
      }

      fadeIn([glow], 1000, 'rgb(200,230,255)');
      setTimeout(glowLoop, 1200);
    }

    // ✅ keys_1~4 연보라 + 보라 글로우로 페이드인
    const keys = getAll('keys', 4);
    keys.forEach(el => {
      el.setAttribute('filter', 'url(#glow-purple)');
      el.setAttribute('fill', '#e3d1ff'); // 연보라
    });

    // ✅ sonic_1~5, atelier_1~7 흰색으로 페이드인
    fadeIn([...getAll('sonic', 5), ...getAll('atelier', 7)]);
  });
</script>






<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mainHeader = document.querySelector('.mk-header');
    const stickyHeader = document.querySelector('.sticky-header');

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          // 메인 헤더가 보이면 스티키 숨기기
          stickyHeader.classList.remove('show');
        } else {
          // 메인 헤더가 화면에서 사라지면 스티키 보이기
          stickyHeader.classList.add('show');
        }
      },
      {
        root: null,
        threshold: 0,
      }
    );

    if (mainHeader) observer.observe(mainHeader);
  });
</script>
