<!DOCTYPE html>
<html lang="ko">
<head>
  <title><%= post.title %> | BlindLove</title>
  <link rel="stylesheet" href="/assets/css/signup.css" />
  <%- include('partials/head') %>
  <style>
    /* 📑 목차 박스 디자인 */
    .post-content .auto-toc {
      background: #f7f9fa;
      border: 1px solid #d0d7de;
      padding: 1rem;
      margin-bottom: 1rem;
      border-radius: 6px;
      font-size: 0.95rem;
      line-height: 1.4;

      max-width: 280px;       /* 💡 박스 너비 제한 */
      width: 100%;            /* 반응형 유지 */
      margin-left: 0;      /* 💡 가운데 정렬 */
      margin-right: auto;
    }

    .post-content .auto-toc .toc-title {
      font-weight: bold;
      margin-bottom: 0.4rem;
      display: block;
    }

    .post-content .auto-toc ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .post-content .auto-toc li {
      margin: 0.1em 0;
      line-height: 1.2;
      padding-right: 0; 
    }


/* 🌞 라이트모드 링크 및 호버 효과 */
.post-content .auto-toc li a {
  color: #0366d6;
  text-decoration: none;
  display: inline-block;        /* ✅ inline은 줄바꿈 안됨. inline-block으로 바꿔 */
  max-width: 100%;              /* ✅ 부모 요소보다 더 넓어지지 않게 제한 */
  width: fit-content;           /* ✅ 글자 길이만큼만 차지하도록 */
  padding: 2px 6px;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.post-content .auto-toc li a:hover {
  color: #999ff9 !important;
  text-decoration: underline !important;
}




    /* 🌙 다크모드 링크 기본 + hover */
    html.dark .post-content .auto-toc {
      background: #1f1f2b;
      border: 1px solid #444;
      color: #ddd;
    }

    html.dark .post-content .auto-toc li a {
      color: #6fb7ff !important;
    }

    html.dark .post-content .auto-toc li a:hover {
      color: #a2d4ff !important;
      text-decoration: underline;
    }

    /* 제목 간격 조정 */
    .post-content h1,
    .post-content h2 {
      margin-top: 0.8em;
      margin-bottom: 0.4em;
      line-height: 1.3;
    }

    .post-content .auto-toc + h1,
    .post-content .auto-toc + h2 {
      margin-top: 0.5rem !important;
    }

    /* 📄 일반 글 스타일 */
    .post-title {
      font-size: 1.5rem;
      font-weight: bold;
      text-align: center;
      margin-bottom: 1rem;
    }

    .post-meta {
      text-align: center;
      font-size: 0.9rem;
      color: #777;
      margin-bottom: 2rem;
    }

    .post-content {
      line-height: 1.7;
      font-size: 1rem;
      white-space: pre-wrap;
      color: #333;
      max-width: 640px;
      margin: 0 auto;
      padding-left: 0.5rem;
    }

    html.dark body .post-content {
      color: #ddd;
    }

    .post-actions a.edit-btn,
    .post-actions form button {
      display: inline-block;
      padding: 4px 10px;
      margin: 0 4px;
      border: none;
      border-radius: 6px;
      font-size: 0.75rem;
      font-weight: 500;
      cursor: pointer;
      transition: background 0.2s ease, color 0.2s ease;
    }

    .post-actions a.edit-btn {
      background-color: #f0f8ff;
      color: #0077cc;
      text-decoration: none;
    }

    .post-actions a.edit-btn:hover {
      background-color: #d8edff;
      color: #005fa3;
    }

    .post-actions form button {
      background-color: #fff0f0;
      color: #cc0000;
      border: 1px solid #cc0000;
    }

    .post-actions form button:hover {
      background-color: #ffe5e5;
      color: #a30000;
    }

    .logo-wrap {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .logo-wrap img {
      max-width: 150px;
      height: auto;
      display: block;
      margin-bottom: 1rem;
    }
  </style>
</head>
<body class="no-fixed-footer">
  <%- include('partials/header') %>

  <div class="signup-container">
    <div class="logo-wrap">
      <img src="/assets/images/post-view.png" alt="BlindLove 로고" />
    </div>

    <div class="post-title"><%= post.title %></div>

    <div class="post-meta">
      <span>카테고리: <%= post.categories %></span><br>
      <span>작성자: <%= post.author %></span><br>
      <span>작성일: <%= new Date(post.created_at).toLocaleString() %></span>
    </div>

    <!-- 📢 광고 삽입 -->
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2585969189290118"
     crossorigin="anonymous"></script>
    <ins class="adsbygoogle"
         style="display:block; text-align:center;"
         data-ad-layout="in-article"
         data-ad-format="fluid"
         data-ad-client="ca-pub-2585969189290118"
         data-ad-slot="3406391330"></ins>
    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>

    <!-- 📜 게시글 내용 -->
    <div class="post-content">
      <%- post.content %>
    </div>

    <!-- ✏️ 수정 / 삭제 버튼 -->
    <% if (user && post.user_id == user.id) { %>
      <div class="post-actions" style="text-align: center; margin-top: 1.5rem;">
        <a href="/edit/<%= post.id %>" class="edit-btn">✏️ 수정하기</a>
        <form action="/delete/<%= post.id %>" method="POST" style="display: inline;">
          <button type="submit" onclick="return confirm('정말 삭제하시겠어요?');">🗑 삭제하기</button>
        </form>
      </div>
    <% } %>

    <div class="extra" style="margin-top: 2rem; text-align: center;">
      <a href="/" class="back-home-link">← 홈으로 돌아가기</a>
    </div>
  </div>


<script> 
// post-view.ejs 파일의 기존 <script> 태그 안에 있는 DOMContentLoaded 이벤트 리스너를 아래 코드로 교체합니다.
  document.addEventListener("DOMContentLoaded", () => {
  // 모든 HTML 스니펫 위젯을 찾습니다.
  document.querySelectorAll('.custom-widget[data-type="html-snippet"]').forEach((el, index) => {
    const encoded = el.getAttribute("data-code"); // Base64로 인코딩된 HTML 코드 가져오기
    if (!encoded) return;

    try {
      // Base64 디코딩
      const binaryString = atob(encoded);
      const len = binaryString.length;
      const bytes = new Uint8Array(len);
      for (let i = 0; i < len; i++) {
          bytes[i] = binaryString.charCodeAt(i);
      }
      const decoder = new TextDecoder('utf-8');
      const decodedHtmlContent = decoder.decode(bytes); // 사용자가 에디터에 입력했던 순수 HTML

      const iframe = document.createElement('iframe');
      // iframe 보안 설정 (매우 중요!)
      // 'allow-scripts': iframe 내부에서 스크립트 실행 허용
      // 'allow-same-origin': iframe이 부모 페이지와 동일한 출처인 것처럼 행동하게 하여 postMessage 통신을 가능하게 함
      iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin'); 
      iframe.setAttribute('referrerpolicy', 'no-referrer'); // 리퍼러 정보 전송 방지
      iframe.setAttribute('title', '삽입된 HTML'); // 스크린 리더를 위한 제목
      iframe.setAttribute('name', `snippet-iframe-${index}`); // 이 iframe을 식별하기 위한 고유한 이름

      // iframe 기본 스타일 설정
      iframe.style.width = '100%';
      iframe.style.minHeight = '100px'; // 초기 최소 높이 (콘텐츠 로딩 중 잘림 방지)
      iframe.style.border = '1px solid #ccc'; // 테두리 (선택 사항)
      iframe.style.borderRadius = '8px'; // 둥근 모서리 (선택 사항)
      iframe.style.margin = '1rem 0'; // 위아래 여백 (선택 사항)
      iframe.style.overflow = 'hidden'; // iframe 자체에 스크롤바가 생기지 않도록 함
      iframe.scrolling = 'no'; // iframe 스크롤바 비활성화 (구형 브라우저 호환성)
      
      el.innerHTML = ''; // 기존의 '[HTML 코드 삽입됨]' 같은 텍스트 제거
      el.appendChild(iframe); // iframe을 HTML 스니펫 자리(el)에 삽입

      // ⭐⭐⭐ iframe이 완전히 로드된 후, 그 내부에 HTML 콘텐츠와 높이 조절 스크립트를 주입합니다. ⭐⭐⭐
      iframe.onload = () => {
          try {
              const iframeDoc = iframe.contentWindow.document; // iframe 내부 문서 객체 가져오기
              iframeDoc.open(); // 문서 쓰기 시작
              // iframe 내부에 완전한 HTML 문서 구조와 높이 조절 스크립트를 작성합니다.
              iframeDoc.write(`
                  <!DOCTYPE html>
                  <html>
                  <head>
                      <style>
                          /* iframe 내부의 기본 마진/패딩 제거 및 스크롤바 숨김 */
                          body, html { margin: 0; padding: 0; overflow: hidden; }
                      </style>
                  </head>
                  <body>
                      ${decodedHtmlContent.replace(/`/g, '\\`')} // ⭐⭐⭐ 여기를 수정했습니다! 백틱 이스케이프 처리 ⭐⭐⭐
                      \n<script> 
                          // 이 스크립트는 iframe 내부에서 실행되어 부모 페이지에게 자신의 높이를 전달합니다.
                          function sendHeightToParent() {
                              const body = document.body;
                              const html = document.documentElement;
                              // iframe 내부 콘텐츠의 실제 높이를 정확히 측정합니다.
                              const height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
                              const iframeName = window.name; // 부모 페이지에서 이 iframe을 식별할 이름

                              // 부모 창으로 메시지를 보냅니다.
                              if (window.parent) {
                                  window.parent.postMessage({
                                      type: 'setIframeHeight', // 메시지 타입 (부모에서 필터링용)
                                      height: height,           // 측정된 높이
                                      iframeName: iframeName    // 어떤 iframe인지 식별자
                                  }, '*'); // 중요: '*'는 모든 출처를 허용. 보안상 실제 도메인 명시 권장.
                              }
                          }
                          // iframe 콘텐츠 로드 및 DOM 준비 시 높이 전송
                          window.addEventListener('load', sendHeightToParent);
                          document.addEventListener('DOMContentLoaded', sendHeightToParent);
                          // iframe 내부 콘텐츠가 동적으로 변할 때 높이 다시 전송 (MutationObserver)
                          const observer = new MutationObserver(sendHeightToParent);
                          observer.observe(document.body, { attributes: true, childList: true, subtree: true });
                          // iframe 크기 자체가 변경될 때 높이 다시 전송 (resize 이벤트)
                          window.addEventListener('resize', sendHeightToParent);
                      </script>
                  </body>
                  </html>
              `);
              iframeDoc.close(); // 문서 쓰기 종료
          } catch (e) {
              console.error("iframe 내부 콘텐츠 주입 오류:", e);
              // 오류 발생 시 iframe에 사용자에게 보이는 메시지 표시
              iframe.contentWindow.document.write('<p style="color:red; padding: 10px;">[HTML 코드 로드 실패]</p>');
          }
      };

    } catch (e) {
      // Base64 디코딩 오류 발생 시
      el.innerHTML = '<p style="color:red; padding: 10px;">[HTML 코드 디코딩 실패]</p>';
      console.error('디코딩 오류:', e);
    }
  });

  // iframe에서 보내는 메시지를 수신하는 리스너 (부모 페이지에서 iframe 높이를 업데이트)
  window.addEventListener('message', (event) => {
    // 보안을 위해 event.origin을 확인하는 것이 좋지만, 현재는 모든 출처 허용
    // if (event.origin !== "http://your-domain.com") return; // 실제 도메인으로 변경

    if (event.data && event.data.type === 'setIframeHeight') {
      const iframeName = event.data.iframeName;
      const height = event.data.height;
      const targetIframe = document.querySelector(`iframe[name="${iframeName}"]`); // 해당 iframe 찾기
      if (targetIframe) {
        targetIframe.style.height = `${height}px`; // 높이 업데이트
      }
    }
  });
});
</script>
  <%- include('partials/footer') %>
  <%- include('partials/scripts') %>
</body>
</html>
