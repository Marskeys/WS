<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <title>BlindLove 에디터</title>
  <link rel="stylesheet" href="/assets/css/editor.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700&display=swap" rel="stylesheet">

  <% if (user) { %>
    <meta name="author" content="<%= user.nickname %>">
  <% } %>

  <%
  const categoryList = (post && post.categories) ? post.categories.split(',') : ['일상'];
  const postUrl = (typeof post !== 'undefined') ? ('/edit/' + post.id) : '/savePost';
  const redirectUrl = (typeof post !== 'undefined') ? ('/post/' + post.id) : '/';
  const userId = user ? user.id : '';
%>


<script>
  window.initialData = {
    selectedCategories: JSON.parse('<%= JSON.stringify(categoryList) %>'),
    userId: "<%= userId %>",
    postUrl: "<%= postUrl %>",
    redirectUrl: "<%= redirectUrl %>"
  };
</script>

</head>

<body>
  <% if (user) { %>
    <div style="text-align: center; font-weight: bold;">
      <%= user.nickname %>님, 에디터에 오신 걸 환영합니다!
    </div>
  <% } %>

  <div class="editor-container">
    <div class="logo-wrap">
      <img src="assets/images/1.png" alt="BlindLove 로고" />
    </div>

    <div class="title-wrap">
      <input type="text" id="postTitle" placeholder="제목을 입력하세요" value="<%= post && post.title ? post.title : '' %>" />
    </div>

    <%- include('partials/toolbar') %> <!-- 툴바는 따로 관리한다면 이 부분 유지 -->

    <div id="editor" contenteditable="true" class="editor" spellcheck="false">
      <%- post && post.content ? post.content : '<p><br></p>' %>
    </div>

    <div class="category-box">
      <label>카테고리:</label>
      <div class="category-list" id="categoryList"></div>
      <button class="add-category-btn" onclick="addCategory()">➕ 카테고리 추가</button>
      <button class="post-btn" onclick="postContent()">📬 포스팅</button>
      <button class="save-btn" onclick="saveContent()">💾 저장</button>
    </div>
  </div>

  <script>
    let selectedCategories = window.initialData.selectedCategories;
    let categories = [];
    let savedRange = null;

    function renderCategories() {
      const list = document.getElementById('categoryList');
      list.innerHTML = '';
      categories.forEach((cat, index) => {
        const item = document.createElement('div');
        item.className = 'category-item';
        if (selectedCategories.includes(cat)) item.classList.add('selected');
        item.innerText = cat;

        item.onclick = () => {
          const i = selectedCategories.indexOf(cat);
          if (i === -1) selectedCategories.push(cat);
          else selectedCategories.splice(i, 1);
          renderCategories();
        };

        const removeBtn = document.createElement('button');
        removeBtn.className = 'remove-btn';
        removeBtn.innerText = '×';
        removeBtn.onclick = (e) => {
          e.stopPropagation();
          if (confirm(`'${cat}' 카테고리를 삭제하시겠습니까?`)) {
            fetch(`/api/categories/${encodeURIComponent(cat)}`, {
              method: 'DELETE'
            })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                categories.splice(index, 1);
                selectedCategories = selectedCategories.filter(c => c !== cat);
                renderCategories();
              } else {
                alert("삭제 실패: " + data.error);
              }
            })
            .catch(err => {
              console.error("삭제 오류:", err);
              alert("삭제 중 오류가 발생했습니다.");
            });
          }
        };

        item.appendChild(removeBtn);
        list.appendChild(item);
      });
    }

    function addCategory() {
      const newCat = prompt("새 카테고리 이름을 입력하세요:")?.trim();
      if (!newCat || categories.includes(newCat)) return;

      fetch('/api/categories', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name: newCat })
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          categories.push(newCat);
          renderCategories();
        } else {
          alert("추가 실패: " + data.error);
        }
      })
      .catch(err => {
        console.error("추가 오류:", err);
        alert("추가 중 오류가 발생했습니다.");
      });
    }

    function postContent() {
      const title = document.getElementById('postTitle').value.trim();
      const content = document.getElementById('editor').innerHTML.trim();
      const categoriesToSend = selectedCategories;

      if (!title) return alert("제목을 입력해주세요.");
      if (!content || content === '<div><br></div>' || content === '<p><br></p>') return alert("내용을 입력해주세요.");
      if (!categoriesToSend || categoriesToSend.length === 0) return alert("최소 하나의 카테고리를 선택해주세요.");

      fetch(window.initialData.postUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          title,
          content,
          categories: categoriesToSend,
          user_id: window.initialData.userId
        })
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          alert("성공적으로 저장되었습니다!");
          window.location.href = window.initialData.redirectUrl;
        } else {
          alert("저장 실패: " + data.error);
        }
      })
      .catch(err => {
        console.error("저장 중 오류:", err);
        alert("저장 중 오류가 발생했습니다.");
      });
    }

    window.onload = () => {
      fetch('/api/categories')
        .then(res => res.json())
        .then(data => {
          categories = data.categories || [];
          renderCategories();
        })
        .catch(err => {
          console.error("카테고리 불러오기 오류:", err);
          categories = ['일상', '기록', '리뷰']; // fallback
          renderCategories();
        });
    };
  </script>
</body>
</html>
