<!DOCTYPE html>
<html class="dark" lang="<%= lang %>">
  <%- include('partials/head') %>
  <link rel="stylesheet" href="/assets/css/index.css" />

  <body class="light">
    <%- include('partials/header') %>

    <div id="preloader"><div class="spinner"></div></div>

    <div class="full-layout">
      <aside class="side-panel main-panel-only"></aside>

      <div class="main-layout">
        <div class="main-panel">
          <div class="cherry-container"><canvas id="cherry-canvas"></canvas></div>

          <div class="search-container">
            <a href="/<%= lang %>/">
              <img src="/assets/images/logo.png" alt="blindly.love 로고" class="site-logo" />
            </a>

            <div class="search-wrapper">
              <div class="character-stand">
                <object id="character-svg" type="image/svg+xml" data="/assets/images/characters.svg"></object>
              </div>
              <form method="get" action="/<%= lang %>/search" class="search-form">
                <input type="text" name="q" class="search-box" placeholder="<%= locale.search.placeholder %>" />
                <button type="submit" class="icon-submit-btn"><i class="fas fa-search"></i></button>
              </form>
            </div>
          </div>

          <!-- ✅ 본문에 뜨던 'search results for …' 문구 제거됨 -->

          <!-- ===== 권한/상태 & 검색결과 카테고리 수집 ===== -->
          <%
            const isAdmin = user && user.is_admin === 1;
            const isSearchMode = Boolean(isSearch && searchKeyword);

            // 탭 라벨에 넣을 검색 문구 생성
            const searchWord = isSearchMode ? String(searchKeyword) : '';
            const resultLine = isSearchMode
              ? (locale.search.resultsFor || 'Search results for "%s"').replace('%s', searchWord)
              : '';

            const resultCategorySet = new Set();
            const resultCatCount = {};
            if (isSearchMode) {
              (posts || []).forEach(p => {
                (p.translated_categories_display || []).forEach(name => {
                  resultCategorySet.add(name);
                  resultCatCount[name] = (resultCatCount[name] || 0) + 1;
                });
              });
            }

            const facetCategories = [];
            (categories || []).forEach(cat => {
              if (resultCategorySet.has(cat.translated)) {
                facetCategories.push({
                  id: cat.id,
                  original: cat.original,
                  translated: cat.translated,
                  count: resultCatCount[cat.translated] || 0
                });
              }
            });

            const canSeeListings = isAdmin || isSearchMode;
          %>

          <!-- ===== 탭 영역 ===== -->
          <div class="tabs-container" data-allposts="<%= locale.tabs.allPosts %>">
            <div class="tabs-blur-left"></div>
            <div class="tabs-blur-right"></div>
            <div class="tabs-wrapper">
              <div class="tabs" id="postTabs">
                <div class="tab-spacer"></div>

                <% if (isAdmin) { %>
                  <a href="/<%= lang %>/?category=all"
                     class="tab <%= !selectedCategory && !isSearch ? 'active' : '' %>">
                    <%= locale.tabs.allPosts %>
                  </a>

                  <% if (isSearchMode) { %>
                    <!-- ✅ 검색 탭 라벨에 resultLine 삽입 -->
                    <div class="tab <%= selectedCategory ? '' : 'active' %>" data-search-tab="1" title="<%= resultLine %>">
                      <%= resultLine || locale.tabs.searchResults %>
                    </div>
                    <% if (facetCategories.length) { %>
                      <span class="tabs-label" role="presentation">
                        <span class="text"><%= (locale.tabs.relatedCategories || '관련 카테고리') %></span>
                        <span class="caret">➤</span>
                      </span>
                    <% } %>
                  <% } %>

                  <% (categories || []).forEach(category => { %>
                    <a href="/<%= lang %>/?category=<%= category.original %>"
                       class="tab <%= selectedCategory === category.translated ? 'active' : '' %>">
                      <%= category.translated %>
                    </a>
                  <% }) %>

                <% } else if (isSearchMode) { %>
                  <!-- 검색결과 탭 + 라벨 + 관련 카테고리 탭들 -->
                  <!-- ✅ 여기에도 동일하게 삽입 -->
                  <div class="tab <%= selectedCategory ? '' : 'active' %>" data-search-tab="1" title="<%= resultLine %>">
                    <%= resultLine || locale.tabs.searchResults %>
                  </div>

                  <% if (facetCategories.length) { %>
                    <span class="tabs-label" role="presentation">
                      <span class="text"><%= (locale.tabs.relatedCategories || '관련 카테고리') %></span>
                      <span class="caret">➤</span>
                    </span>
                  <% } %>

                  <% facetCategories.forEach(cat => { %>
                    <!-- ✅ 폴백 가능한 실제 링크 + AJAX용 data-* -->
                    <a href="/<%= lang %>/?category=<%= cat.original %>"
                       class="tab <%= selectedCategory === cat.translated ? 'active' : '' %>"
                       data-cat-key="<%= cat.original %>"
                       data-cat-id="<%= cat.id %>">
                      <%= cat.translated %><span class="facet-count"> (<%= cat.count %>)</span>
                    </a>
                  <% }) %>
                <% } %>
                <!-- 일반 사용자 + 검색 아님: 탭 비노출 -->
              </div>
            </div>
          </div>

          <!-- ===== 목록/페이지네이션(데스크톱+모바일) ===== -->
          <% if (canSeeListings) { %>

            <% if (pagination.total > 1) { %>
              <div class="pagination pagination-top desktop-only">
                <%
                  const paginationBaseUrl = isSearchMode
                    ? `/${lang}/search?q=${encodeURIComponent(searchKeyword)}${selectedCategory ? `&category=${encodeURIComponent(selectedCategory)}` : ''}`
                    : `/${lang}/?category=${selectedCategory || 'all'}`;
                %>
                <% if (pagination.current > 1) { %>
                  <a href="<%= paginationBaseUrl %>&page=1" class="page-link" aria-label="First">«</a>
                  <a href="<%= paginationBaseUrl %>&page=<%= pagination.current - 1 %>" class="page-link" aria-label="Previous">‹</a>
                <% } else { %>
                  <span class="page-link disabled">«</span>
                  <span class="page-link disabled">‹</span>
                <% } %>

                <% pagination.range.forEach(p => { %>
                  <% if (p === '...') { %>
                    <span class="page-ellipsis">…</span>
                  <% } else { %>
                    <a href="<%= paginationBaseUrl %>&page=<%= p %>"
                       class="page-link <%= p === pagination.current ? 'active' : '' %>"><%= p %></a>
                  <% } %>
                <% }) %>

                <% if (pagination.current < pagination.total) { %>
                  <a href="<%= paginationBaseUrl %>&page=<%= pagination.current + 1 %>" class="page-link" aria-label="Next">›</a>
                  <a href="<%= paginationBaseUrl %>&page=<%= pagination.total %>" class="page-link" aria-label="Last">»</a>
                <% } else { %>
                  <span class="page-link disabled">›</span>
                  <span class="page-link disabled">»</span>
                <% } %>
              </div>
            <% } %>

            <table class="board-table">
              <thead>
                <tr>
                  <th><%= locale.tableHeaders.number %></th>
                  <th><%= locale.tableHeaders.title %></th>
                  <th><%= locale.tableHeaders.author %></th>
                  <th><%= locale.tableHeaders.category %></th>
                  <th><%= locale.tableHeaders.date %></th>
                  <th><%= locale.tableHeaders.views %></th>
                </tr>
              </thead>
              <tbody id="board-content">
                <% posts.forEach(post => { %>
                  <tr>
                    <td><%= post.id %></td>
                    <td>
                      <div class="post-title-and-actions">
                        <a href="/<%= lang %>/post/<%= post.id %>"
                          class="post-detail-link <%= post.is_pinned == 1 ? 'pinned-title' : '' %>"
                          data-post-id="<%= post.id %>"
                          data-is-private="<%= post.is_private ? '1' : '0' %>"
                          data-post-user-id="<%= post.user_id %>">
                          <%
                            const now = new Date();
                            const createdAt = new Date(post.created_at);
                            const updatedAt = new Date(post.updated_at);
                            const oneDay = 1000 * 60 * 60 * 24;
                            const isNewPost = (now - createdAt) < oneDay;
                            const wasEdited = updatedAt > createdAt;
                            const isRecentlyEdited = wasEdited && (now - updatedAt < oneDay);
                            const showEditedLabel = !isNewPost && isRecentlyEdited;
                          %>
                          <% if (isNewPost) { %><span class="label-icon new-icon"></span><% } else if (showEditedLabel) { %><span class="label-icon edited-icon"></span><% } %>
                          <% if (post.is_pinned) { %><span>📌</span><% } %>
                          <%= post.title %><% if (post.is_private) { %> <i class="fas fa-lock"></i><% } %>
                        </a>

                        <% if (user && user.id === post.user_id) { %>
                          <div class="action-icons">
                            <a href="/edit/<%= post.id %>" class="icon-btn edit-btn" title="수정"><i class="fas fa-pen"></i></a>
                            <form action="/delete/<%= post.id %>" method="POST" class="delete-post-form">
                              <button type="submit" class="icon-btn delete-btn" title="삭제"><i class="fas fa-trash"></i></button>
                            </form>
                          </div>
                        <% } %>
                      </div>
                    </td>
                    <td><%= post.author %></td>
                    <td style="text-align: center;"><%= (post.translated_categories_display || []).join(', ') %></td>
                    <td><%= post.created_at.toISOString().slice(0, 10) %></td>
                    <td style="text-align: center;"><%= post.views %></td>
                  </tr>
                <% }) %>
              </tbody>
            </table>

            <% if (pagination.total > 1) { %>
              <div class="pagination pagination-bottom desktop-only">
                <%
                  const paginationBaseUrlBottom = isSearchMode
                    ? `/${lang}/search?q=${encodeURIComponent(searchKeyword)}${selectedCategory ? `&category=${encodeURIComponent(selectedCategory)}` : ''}`
                    : `/${lang}/?category=${selectedCategory || 'all'}`;
                %>
                <% if (pagination.current > 1) { %>
                  <a href="<%= paginationBaseUrlBottom %>&page=1" class="page-link" aria-label="First">«</a>
                  <a href="<%= paginationBaseUrlBottom %>&page=<%= pagination.current - 1 %>" class="page-link" aria-label="Previous">‹</a>
                <% } else { %>
                  <span class="page-link disabled">«</span>
                  <span class="page-link disabled">‹</span>
                <% } %>
                <% pagination.range.forEach(p => { %>
                  <% if (p === '...') { %>
                    <span class="page-ellipsis">…</span>
                  <% } else { %>
                    <a href="<%= paginationBaseUrlBottom %>&page=<%= p %>"
                       class="page-link <%= p === pagination.current ? 'active' : '' %>"><%= p %></a>
                  <% } %>
                <% }) %>
                <% if (pagination.current < pagination.total) { %>
                  <a href="<%= paginationBaseUrlBottom %>&page=<%= pagination.current + 1 %>" class="page-link" aria-label="Next">›</a>
                  <a href="<%= paginationBaseUrlBottom %>&page=<%= pagination.total %>" class="page-link" aria-label="Last">»</a>
                <% } else { %>
                  <span class="page-link disabled">›</span>
                  <span class="page-link disabled">»</span>
                <% } %>
              </div>
            <% } %>

            <div class="mobile-board-list">
              <% posts.forEach(post => { %>
                <div class="mobile-post-item">
                  <div class="post-title-and-actions">
                    <a href="/<%= lang %>/post/<%= post.id %>"
                      class="post-title post-detail-link <%= post.is_pinned == 1 ? 'pinned-title' : '' %>"
                      data-post-id="<%= post.id %>"
                      data-is-private="<%= post.is_private ? '1' : '0' %>"
                      data-post-user-id="<%= post.user_id %>">
                      <%
                        const nowM = new Date();
                        const createdAtM = new Date(post.created_at);
                        const updatedAtM = new Date(post.updated_at);
                        const oneDayM = 1000 * 60 * 60 * 24;
                        const isNewM = (nowM - createdAtM) < oneDayM;
                        const wasEditedM = updatedAtM > createdAtM;
                        const isRecentlyEditedM = wasEditedM && (nowM - updatedAtM < oneDayM);
                        const showEditedLabelM = !isNewM && isRecentlyEditedM;
                      %>
                      <% if (isNewM) { %><span class="label-icon new-icon"></span><% } else { %><% if (showEditedLabelM) { %><span class="label-icon edited-icon"></span><% } %><% } %>
                      <% if (post.is_pinned) { %><span>📌</span><% } %>
                      <%= post.title %><% if (post.is_private) { %> <i class="fas fa-lock"></i><% } %>
                    </a>
                  </div>
                  <div class="post-info">
                    <%= post.author %> |
                    <%= post.created_at.toISOString().slice(0, 10) %> |
                    <%= locale.tableHeaders.views %> <%= post.views %> |
                    <%= (post.translated_categories_display || []).join(', ') %>
                  </div>
                </div>
              <% }) %>
            </div>

            <% if (pagination.total > 1) { %>
              <div class="pagination pagination-mobile mobile-only">
                <%
                  const paginationBaseUrlMobile = isSearchMode
                    ? `/${lang}/search?q=${encodeURIComponent(searchKeyword)}${selectedCategory ? `&category=${encodeURIComponent(selectedCategory)}` : ''}`
                    : `/${lang}/?category=${selectedCategory || 'all'}`;
                %>
                <% if (pagination.current > 1) { %>
                  <a href="<%= paginationBaseUrlMobile %>&page=1" class="page-link" aria-label="First">«</a>
                  <a href="<%= paginationBaseUrlMobile %>&page=<%= pagination.current - 1 %>" class="page-link" aria-label="Previous">‹</a>
                <% } else { %>
                  <span class="page-link disabled">«</span>
                  <span class="page-link disabled">‹</span>
                <% } %>
                <% pagination.range.forEach(p => { %>
                  <% if (p === '...') { %>
                    <span class="page-ellipsis">…</span>
                  <% } else { %>
                    <a href="<%= paginationBaseUrlMobile %>&page=<%= p %>"
                       class="page-link <%= p === pagination.current ? 'active' : '' %>"><%= p %></a>
                  <% } %>
                <% }) %>
                <% if (pagination.current < pagination.total) { %>
                  <a href="<%= paginationBaseUrlMobile %>&page=<%= pagination.current + 1 %>" class="page-link" aria-label="Next">›</a>
                  <a href="<%= paginationBaseUrlMobile %>&page=<%= pagination.total %>" class="page-link" aria-label="Last">»</a>
                <% } else { %>
                  <span class="page-link disabled">›</span>
                  <span class="page-link disabled">»</span>
                <% } %>
              </div>
            <% } %>

          <% } %>

          <div class="spacer"></div>
        </div>
      </div>

      <aside class="side-panel right-panel-only">
        <div class="ad-box">
          <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2585969189290118" crossorigin="anonymous"></script>
          <ins class="adsbygoogle" style="display:block"
               data-ad-client="ca-pub-2585969189290118"
               data-ad-slot="5988925289"
               data-ad-format="auto"
               data-full-width-responsive="true"></ins>
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
        </div>
      </aside>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const tabsRoot = document.getElementById('postTabs');
        const DEFAULT_LIMIT = 10;
        const isSearchMode = Boolean(<%- JSON.stringify(!!searchKeyword) %>);
        const currentLang   = <%- JSON.stringify(lang || 'ko') %>;
        const searchKeyword = <%- JSON.stringify(searchKeyword || '') %>;
    
        // 공용: 목록 + 페이지네이션 렌더
        function renderListAndPaging({ posts, total, page, limit, baseUrl, ajaxMode=true }) {
  updatePostLists(posts);

  // 서버 페이지네이션 숨김
  document.querySelectorAll('.pagination').forEach(el => el.style.display = 'none');

  const isMobile = window.matchMedia('(max-width: 768px)').matches;

  if (isMobile) {
    ensureAjaxPager('.pagination-mobile', 'ajax-pager-mobile');
    drawPager('#ajax-pager-mobile', total, page, limit, baseUrl);
    bindPager('#ajax-pager-mobile', baseUrl, limit);
  } else {
    ensureAjaxPager('.pagination-top', 'ajax-pager-top');
    ensureAjaxPager('.pagination-bottom', 'ajax-pager-bottom');
    drawPager('#ajax-pager-top', total, page, limit, baseUrl);
    drawPager('#ajax-pager-bottom', total, page, limit, baseUrl);
    bindPager('#ajax-pager-top', baseUrl, limit);
    bindPager('#ajax-pager-bottom', baseUrl, limit);
  }
}
    
        function ensureAjaxPager(selectorForPlace, ajaxId) {
  let holder = document.getElementById(ajaxId);
  if (!holder) {
    holder = document.createElement('div');
    holder.id = ajaxId;
    holder.className = 'pagination ajax-pagination';
    // 1) 원래 자리 찾기
    const place = document.querySelector(selectorForPlace);
    if (place) {
      place.insertAdjacentElement('afterend', holder);
    } else {
      // 2) 자리 없으면 폴백 앵커
      if (ajaxId.includes('top')) {
        const table = document.querySelector('.board-table');
        (table?.parentElement || document.querySelector('.main-panel') || document.body)
          .insertBefore(holder, table || document.querySelector('.main-panel')?.firstChild);
      } else if (ajaxId.includes('bottom')) {
        const table = document.querySelector('.board-table');
        (table?.parentElement || document.querySelector('.main-panel') || document.body)
          .appendChild(holder);
      } else {
        const mobile = document.querySelector('.mobile-board-list');
        (mobile?.parentElement || document.querySelector('.main-panel') || document.body)
          .appendChild(holder);
      }
    }
  }
  holder.style.display = 'block';
}
    
        // 페이지 버튼 범위 계산(서버 로직과 유사)
        function calcRange(current, total) {
          const window = 5; // 최대 5 버튼
          const pages = [];
          if (total <= window) {
            for (let i = 1; i <= total; i++) pages.push(i);
            return pages;
          }
          const half = Math.floor(window/2);
          let start = Math.max(1, current - half);
          let end   = Math.min(total, start + window - 1);
          if (end - start + 1 < window) start = Math.max(1, end - window + 1);
    
          if (start > 1) {
            pages.push(1);
            if (start > 2) pages.push('...');
          }
          for (let i = start; i <= end; i++) pages.push(i);
          if (end < total) {
            if (end < total - 1) pages.push('...');
            pages.push(total);
          }
          return pages;
        }
    
        function drawPager(containerSelector, total, currentPage, limit, baseUrl) {
          const el = document.querySelector(containerSelector);
          if (!el) return;
          const totalPages = Math.max(1, Math.ceil((total ?? 0) / (limit || DEFAULT_LIMIT)));
          if (totalPages <= 1) { el.innerHTML = ''; el.style.display = 'none'; return; }
    
          const range = calcRange(currentPage, totalPages);
    
          const mk = (href, text, disabled=false, active=false, aria='') =>
            `<a href="${href}" class="page-link${disabled?' disabled':''}${active?' active':''}" ${aria}>${text}</a>`;
    
          const prevDisabled = currentPage <= 1;
          const nextDisabled = currentPage >= totalPages;
    
          const first = mk(`${baseUrl}&page=1`, '«', prevDisabled, false, `aria-label="First"`);
          const prev  = mk(`${baseUrl}&page=${Math.max(1, currentPage-1)}`, '‹', prevDisabled, false, `aria-label="Previous"`);
          const next  = mk(`${baseUrl}&page=${Math.min(totalPages, currentPage+1)}`, '›', nextDisabled, false, `aria-label="Next"`);
          const last  = mk(`${baseUrl}&page=${totalPages}`, '»', nextDisabled, false, `aria-label="Last"`);
    
          const mids = range.map(p => p === '...'
            ? `<span class="page-ellipsis">…</span>`
            : mk(`${baseUrl}&page=${p}`, String(p), false, p===currentPage)).join('');
    
          el.innerHTML = `${first}${prev}${mids}${next}${last}`;
        }
    
        function bindPager(containerSelector, baseUrl, limit) {
          const el = document.querySelector(containerSelector);
          if (!el) return;
          el.querySelectorAll('a.page-link').forEach(a => {
            a.addEventListener('click', (e) => {
              e.preventDefault();
              const u = new URL(a.getAttribute('href'), window.location.origin);
              const page = Number(u.searchParams.get('page') || '1');
    
              // baseUrl에 q / category 정보가 이미 포함되어 있음
              const params = new URLSearchParams(u.search);
              const q = params.get('q');
              const category = params.get('category');
    
              if (q) {
                loadSearch(q, page, limit);
              } else if (category) {
                loadCategory(category, page, limit);
              }
            });
          });
        }
    
        // 목록 렌더(테이블+모바일)
        function updatePostLists(posts){
          const tableBody = document.querySelector('#board-content');
          const mobileList = document.querySelector('.mobile-board-list');
    
          const getViews = (p) =>
            p.views ?? p.view_count ?? p.viewCount ?? p.hits ?? p.reads ?? p.read ?? 0;
    
          const getCats = (p) => {
            const cats = p.translated_categories_display ?? p.categories ?? [];
            return Array.isArray(cats) ? cats.join(', ') : (typeof cats === 'string' ? cats : '');
          };
    
          if (tableBody) tableBody.innerHTML = '';
          if (mobileList) mobileList.innerHTML = '';
    
          (posts || []).forEach(post => {
            // 데스크톱
            if (tableBody) {
              const tr = document.createElement('tr');
              tr.innerHTML = `
                <td>${post.id ?? ''}</td>
                <td>
                  <a href="/${currentLang}/post/${post.id}"
                     class="post-detail-link ${post.is_pinned ? 'pinned-title' : ''}"
                     data-is-private="${post.is_private ? '1' : '0'}"
                     data-post-user-id="${post.user_id ?? ''}">
                    ${post.is_pinned ? '📌 ' : ''}${post.title ?? ''}${post.is_private ? ' <i class="fas fa-lock"></i>' : ''}
                  </a>
                </td>
                <td>${post.author ?? ''}</td>
                <td style="text-align:center;">${getCats(post)}</td>
                <td>${post.created_at ? String(post.created_at).slice(0,10) : ''}</td>
                <td style="text-align:center;">${getViews(post)}</td>
              `;
              tableBody.appendChild(tr);
            }
    
            // 모바일
            if (mobileList) {
              const div = document.createElement('div');
              div.className = 'mobile-post-item';
              div.innerHTML = `
                <div class="post-title-and-actions">
                  <a href="/${currentLang}/post/${post.id}"
                     class="post-title post-detail-link ${post.is_pinned ? 'pinned-title' : ''}"
                     data-is-private="${post.is_private ? '1' : '0'}"
                     data-post-user-id="${post.user_id ?? ''}">
                    ${post.is_pinned ? '📌 ' : ''}${post.title ?? ''}${post.is_private ? ' <i class="fas fa-lock"></i>' : ''}
                  </a>
                </div>
                <div class="post-info">
                  ${post.author ?? ''} | ${post.created_at ? String(post.created_at).slice(0,10) : ''} | <%= locale.tableHeaders.views %> ${getViews(post)} | ${getCats(post)}
                </div>
              `;
              mobileList.appendChild(div);
            }
          });
    
          // 비공개 가드 재바인딩
          const currentUser = window.BL_USER || null;
          const currentUserId = currentUser ? String(currentUser.id) : null;
          const isAdmin = currentUser ? currentUser.is_admin === 1 : false;
          document.querySelectorAll('.post-detail-link').forEach(link => {
            if (link.__bl_guard_attached) return;
            link.__bl_guard_attached = true;
            link.addEventListener('click', (event) => {
              const isPrivate = event.currentTarget.dataset.isPrivate === '1';
              const postUserId = event.currentTarget.dataset.postUserId;
              if (isPrivate && postUserId !== String(currentUserId) && !isAdmin) {
                event.preventDefault();
                showCustomMessage("이 글은 비공개로 설정되어 접근할 수 없습니다.");
              }
            });
          });
        }
    
        // ===== 데이터 로더들 =====
        function normalizeMeta(meta, fallbackTotal, page, limit) {
          const total = Number(meta?.total ?? meta?.totalCount ?? fallbackTotal ?? 0);
          const pg    = Number(meta?.page  ?? meta?.current   ?? page ?? 1);
          const lim   = Number(meta?.limit ?? meta?.perPage   ?? limit ?? DEFAULT_LIMIT);
          return { total, page: pg, limit: lim };
        }
    
        function loadCategory(catKey, page=1, limit=DEFAULT_LIMIT) {
          const url = `/api/posts?category=${encodeURIComponent(catKey)}&lang=${encodeURIComponent(currentLang)}&page=${page}&limit=${limit}`;
          fetch(url)
            .then(res => res.json())
            .then(async (data) => {
              console.log('[CAT] raw:', data); 
              const posts = data.posts || data.results || data.data || [];
              // 메타 폴백: 없으면 카운트 API로 total 계산
              let meta = normalizeMeta(data, undefined, page, limit);
              if (!data.total && !data.totalCount) {
                try {
                  const r = await fetch(`/api/category-count?category=${encodeURIComponent(catKey)}&lang=${encodeURIComponent(currentLang)}`);
                  const j = await r.json();
                  meta = normalizeMeta({ total: j.total }, j.total, page, limit);
                } catch(_) {}
              }
              const baseUrl = `/${currentLang}/search?category=${encodeURIComponent(catKey)}`;
              renderListAndPaging({ posts, total: meta.total, page: meta.page, limit: meta.limit, baseUrl });
            })
            .catch(err => {
              console.error('카테고리 로드 실패:', err);
              window.location.href = `/${currentLang}/?category=${encodeURIComponent(catKey)}&page=${page}`;
            });
        }
    
        function loadSearch(q, page=1, limit=DEFAULT_LIMIT) {
          console.log('API search data:', data);
          const url = `/api/search?q=${encodeURIComponent(q)}&lang=${encodeURIComponent(currentLang)}&page=${page}&limit=${limit}`;
          fetch(url)
            .then(res => res.json())
            .then((data) => {
              const posts = data.posts || data.results || data.data || [];
              const meta  = normalizeMeta(data, posts.length, page, limit);
              const baseUrl = `/${currentLang}/search?q=${encodeURIComponent(q)}`;
              renderListAndPaging({ posts, total: meta.total, page: meta.page, limit: meta.limit, baseUrl });
            })
            .catch(err => {
              console.error('검색 로드 실패:', err);
              window.location.href = `/${currentLang}/search?q=${encodeURIComponent(q)}&page=${page}`;
            });
        }
    
        // ===== 탭 이벤트 =====
        if (tabsRoot) {
          tabsRoot.addEventListener('click', (e) => {
            const a = e.target.closest('a.tab[data-cat-key]');
            if (!a) return;
            if (!isSearchMode) return; // 검색이 아닐 땐 서버 내비게이션
            e.preventDefault();
    
            const catKey = a.dataset.catKey;
            loadCategory(catKey, 1, DEFAULT_LIMIT);
    
            // 탭 active 처리
            document.querySelectorAll('.tabs .tab').forEach(t => t.classList.remove('active'));
            a.classList.add('active');
          });
        }
    
        const searchResultTab = document.querySelector('.tabs [data-search-tab="1"]');
        if (searchResultTab && isSearchMode) {
          searchResultTab.addEventListener('click', (e) => {
            e.preventDefault();
            loadSearch(searchKeyword, 1, DEFAULT_LIMIT);
            document.querySelectorAll('.tabs .tab').forEach(t => t.classList.remove('active'));
            searchResultTab.classList.add('active');
          });
        }
    
        // 검색 모드에서 관련 카테고리 뱃지 총개수 덮어쓰기
        if (isSearchMode) {
          document.querySelectorAll('#postTabs a.tab[data-cat-key]').forEach(a => {
            const key = a.dataset.catKey;
            const badge = a.querySelector('.facet-count');
            if (!badge) return;
            fetch(`/api/category-count?category=${encodeURIComponent(key)}&lang=${encodeURIComponent(currentLang)}`)
              .then(r => r.json())
              .then(({ total = 0 }) => { badge.textContent = ` (${total})`; })
              .catch(() => {});
          });
        }
      });
    </script>
    

    <%- include('partials/footer') %>
    <%- include('partials/scripts') %>
  </body>
</html>
