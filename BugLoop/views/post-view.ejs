<!DOCTYPE html>
<html lang="<%= lang %>">
<head>
  <title><%= post.title %> | Bug Loop</title>
  <link rel="stylesheet" href="/assets/css/post-view.css" />
  
  <%- include('partials/head') %>

  <% if (canonicalUrl) { %>
    <link rel="canonical" href="<%= canonicalUrl %>">
  <% } %>

  <% if (alternateLinks && alternateLinks.length > 0) { %>
    <% alternateLinks.forEach(link => { %>
      <link rel="alternate" hreflang="<%= link.lang %>" href="<%= link.href %>">
    <% }); %>
    <link rel="alternate" hreflang="x-default" href="https://bugloop.dev/<%= lang %>/post/<%= post.id %>">
  <% } %>

  <% const testKeywords = ['테스트', 'test', 'テスト', '测试']; %>
<% if (post.categories.some(cat => testKeywords.includes(cat))) { %>
  <meta name="robots" content="noindex">
<% } %>
</head>

<body class="no-fixed-footer">
  <amp-auto-ads type="adsense"
        data-ad-client="ca-pub-2585969189290118">
</amp-auto-ads>
  <%- include('partials/header') %>

  <div class="postview-container">
    <div class="post-title"><%= post.title %></div>

    <div class="post-meta">
      <span>카테고리: <%= post.categories.join(', ') %></span><br>
      <span>작성자: <%= post.author %></span><br>
      <span>작성일: <%= new Date(post.created_at).toLocaleString() %></span>
    </div>

    <div class="post-content">
      <%- post.content %>
    </div>

    <% if (user && post.user_id == user.id) { %>
      <div class="post-actions" style="text-align: center; margin-top: 1.5rem;">
        <a href="/<%= lang %>/edit/<%= post.id %>" class="edit-btn">✏️ 수정하기</a>
        <form action="/<%= lang %>/delete/<%= post.id %>" method="POST" style="display: inline;">
          <button type="submit" onclick="return confirm('정말 삭제하시겠어요?');">🗑 삭제하기</button>
        </form>
      </div>
    <% } %>

    <div class="extra" style="margin-top: 2rem; text-align: center;">
      <a href="/<%= lang %>/" class="back-home-link">← 홈으로 돌아가기</a>
    </div>
  </div>

  <div class="floating-toc" id="floatingToc"></div>
<div class="mobile-toc-button" id="mobileTocBtn"><%= locale.ui.tocButton %></div>
<div class="mobile-toc-modal" id="mobileTocModal">
  <div class="mobile-toc-content" id="mobileTocContent"></div>

</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const postContent = document.querySelector('.post-content');
    const floatingToc = document.getElementById('floatingToc');
    const mobileTocBtn = document.getElementById('mobileTocBtn');
    const mobileTocModal = document.getElementById('mobileTocModal');
    const mobileTocContent = document.getElementById('mobileTocContent');
    const mobileTocCloseBtn = document.getElementById('mobileTocCloseBtn');

    if (!postContent) return;

    // 1. 목차 생성 및 ID 부여
    function generateToc() {
      const headings = postContent.querySelectorAll('h1, h2');
      if (headings.length === 0) {
        // 목차가 없으면 목차 관련 요소 숨기기
        if (floatingToc) floatingToc.style.display = 'none';
        if (mobileTocBtn) mobileTocBtn.style.display = 'none';
        return;
      }

      // 📌 변경 사항: locale에서 목차 버튼 텍스트 가져옴 (이전에는 하드코딩된 '목차')
      let tocHtml = '<strong><%= locale.ui.tocButton %></strong><ul style="padding-left: 1.2em;">';
      let h1Count = 0;
      let h2Count = 0;

      headings.forEach((heading, index) => {
        const tag = heading.tagName.toLowerCase();
        let sectionNumber = '';
        
        // 기존 ID가 없거나 유효하지 않으면 새로 생성
        if (!heading.id || !heading.id.startsWith('toc-')) {
            heading.id = `toc-${tag}-${index}`;
        }

        if (tag === 'h1') {
          h1Count++;
          h2Count = 0; // Reset h2 count for new h1
          sectionNumber = `${h1Count}.`;
          tocHtml += `<li class="toc-${tag}"><a href="#${heading.id}">${sectionNumber} ${heading.textContent}</a></li>`;
        } else if (tag === 'h2') {
          h2Count++;
          // H1이 없이 H2가 먼저 나올 경우를 대비 (선택 사항)
          if (h1Count === 0) h1Count = 1; 
          sectionNumber = `${h1Count}.${h2Count}`;
          tocHtml += `<li class="toc-${tag}"><a href="#${heading.id}">${sectionNumber} ${heading.textContent}</a></li>`;
        }
      });
      tocHtml += '</ul>';

      if (floatingToc) {
        floatingToc.innerHTML = tocHtml;
        floatingToc.style.display = 'block'; // 목차 내용이 있으면 보이게
      }
      if (mobileTocContent) {
        mobileTocContent.innerHTML = tocHtml;
        mobileTocBtn.style.display = 'block'; // 모바일 버튼 보이게
      }
    }

    // 2. 스크롤 감지 및 플로팅 목차 표시/숨김 (데스크톱용)
    function handleScroll() {
      const scrollThreshold = 300; // 스크롤이 이 값(px) 이상 내려가면 목차 표시
      if (window.innerWidth > 768) { // 데스크톱에서만 작동하도록 (모바일에서는 버튼이 따로 있으므로)
        if (window.scrollY > scrollThreshold) {
          if (floatingToc) floatingToc.classList.add('show');
        } else {
          if (floatingToc) floatingToc.classList.remove('show');
        }
      }
    }

    // 3. 모바일 목차 모달 토글
    if (mobileTocBtn) {
      mobileTocBtn.addEventListener('click', function() {
        if (mobileTocModal) mobileTocModal.classList.add('show');
      });
    }

    if (mobileTocCloseBtn) {
      mobileTocCloseBtn.addEventListener('click', function() {
        if (mobileTocModal) mobileTocModal.classList.remove('show');
      });
    }

    // 모바일 목차 링크 클릭 시 모달 닫기
    if (mobileTocContent) {
      mobileTocContent.addEventListener('click', function(event) {
        if (event.target.tagName === 'A' && mobileTocModal) {
          mobileTocModal.classList.remove('show');
        }
      });
    }

    // 초기 목차 생성
    generateToc();
    // 스크롤 이벤트 리스너 등록
    window.addEventListener('scroll', handleScroll);
    // 리사이즈 시에도 스크롤 핸들러 재실행 (데스크톱/모바일 전환 대응)
    window.addEventListener('resize', handleScroll);
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  const toc = document.querySelector(".auto-toc");
  const floatingToc = document.getElementById("floatingToc");
  const mobileBtn = document.getElementById("mobileTocBtn");
  const mobileModal = document.getElementById("mobileTocModal");
  const mobileContent = document.getElementById("mobileTocContent");

  if (!toc) return;

  // 📌 내용 복사 (floating & 모바일 modal)
  floatingToc.innerHTML = toc.innerHTML;
  mobileContent.innerHTML = toc.innerHTML;

  // 📱 모바일 팝업 열기
  mobileBtn.addEventListener("click", () => {
    mobileModal.style.display = "flex";
    document.body.classList.add("modal-open");
  });

  // 📱 모바일 팝업 닫기 (배경 클릭 시)
  mobileModal.addEventListener("click", (e) => {
    if (e.target === mobileModal) {
      mobileModal.style.display = "none";
      document.body.classList.remove("modal-open");
    }
  });

  // 📱 모바일 항목 클릭 시 스크롤 & 모달 닫기
  mobileContent.addEventListener("click", (e) => {
    if (e.target.tagName === "A") {
      e.preventDefault();
      const targetId = e.target.getAttribute("href").replace("#", "");
      const el = document.getElementById(targetId);
      if (el) {
        el.scrollIntoView({ behavior: "smooth" });
        mobileModal.style.display = "none";
        document.body.classList.remove("modal-open");
      }
    }
  });

  // 🧷 센티넬 요소 생성 (목차 위/아래 기준점)
  const topSentinel = document.createElement("div");
  topSentinel.style.height = "1px";
  toc.before(topSentinel);

  const bottomSentinel = document.createElement("div");
  bottomSentinel.style.height = "1px";
  toc.after(bottomSentinel);

  // 👁️ 스크롤 기준 목차 표시 감지
  const checkFloatingToc = () => {
    const top = topSentinel.getBoundingClientRect().top;
    const bottom = bottomSentinel.getBoundingClientRect().top;

    const isTocFullyPassed = top < 0 && bottom < 0;

      // 모바일 전용
  if (window.innerWidth <= 768 && isTocFullyPassed) {
    floatingToc.style.display = "none"; // 모바일에선 floating 숨김
    mobileBtn.classList.add("show");
  } else {
    mobileBtn.classList.remove("show");
    // 데스크톱에서는 기존 floatingToc 표시/숨김 처리
    floatingToc.style.display = isTocFullyPassed ? "block" : "none";
  }
};


  window.addEventListener("scroll", checkFloatingToc);
  window.addEventListener("resize", checkFloatingToc);
  checkFloatingToc();
});

</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const floatingToc = document.getElementById("floatingToc");
  
    if (window.innerWidth > 768 && floatingToc) {
      let isDragging = false;
      let offsetX = 0;
      let offsetY = 0;
  
      floatingToc.style.position = "fixed";
      floatingToc.style.cursor = "move";
  
      floatingToc.addEventListener("mousedown", (e) => {
        isDragging = true;
        offsetX = e.clientX - floatingToc.getBoundingClientRect().left;
        offsetY = e.clientY - floatingToc.getBoundingClientRect().top;
        document.body.style.userSelect = "none";
      });
  
      document.addEventListener("mousemove", (e) => {
        if (isDragging) {
          floatingToc.style.left = e.clientX - offsetX + "px";
          floatingToc.style.top = e.clientY - offsetY + "px";
        }
      });
  
      document.addEventListener("mouseup", () => {
        isDragging = false;
        document.body.style.userSelect = "";
      });
    }
  });
  </script>
  
  <style>
    .in-article-ad {
      margin: 24px auto;
      text-align: center;
      max-width: 100%;
    }
    .in-article-ad ins {
      display: block;
      width: 100%;
    }
  </style>
  
  <style>
    .in-article-ad{ margin:24px auto; text-align:center; max-width:100%; }
    .in-article-ad ins{ display:block; width:100%; }
  </style>
  
  <script>
  document.addEventListener('DOMContentLoaded', function () {
    const container = document.querySelector('.post-content');
    if (!container) return;
  
    const paragraphs = Array.from(container.querySelectorAll('p'));
    if (!paragraphs.length) return;
  
    const isLongEnough = (p) => (p.textContent||'').trim().length > 50;
    const adPositions = [2,5,8].filter(i => i < paragraphs.length && isLongEnough(paragraphs[i]));
  
    adPositions.forEach((pos) => {
      const p = paragraphs[pos];
  
      // 래퍼 + ins 생성
      const wrap = document.createElement('div');
      wrap.className = 'in-article-ad';
  
      const ins = document.createElement('ins');
      ins.className = 'adsbygoogle';
      ins.style.display = 'block';
      ins.setAttribute('data-ad-client', 'ca-pub-2585969189290118');
      ins.setAttribute('data-ad-slot',   '2419246715');
      ins.setAttribute('data-ad-format', 'auto');
      ins.setAttribute('data-full-width-responsive', 'true');
  
      wrap.appendChild(ins);
      p.insertAdjacentElement('afterend', wrap);
  
      // ⬅️ innerHTML에 넣지 말고 직접 push 호출
      try { (window.adsbygoogle = window.adsbygoogle || []).push({}); } catch(e) {}
    });
  });
  </script>

<%- include('partials/scripts') %>
</body>
</html>