<!DOCTYPE html>
<html class="dark" lang="<%= lang %>">
<head>
  <%- include('partials/head') %>
  <link rel="stylesheet" href="/assets/css/index.css" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Bug Loop · Online HTML Editor</title>
  <style>
    :root{
      --chrome-gap-desktop:50px; /* 좌측 VSCode 사이드바 여백 */
      --panel-gap:16px;
      --radius:12px;
      --border:#2b2b2b;
      --bg:#1b1b1b;
      --panel:#121212;
      --panel-2:#0e0e0e;
      --ink:#eaeaea;
      --ink-2:#b7b7b7;
      --accent:#00f5d4;
    }
    html:not(.dark){
      --border:#d9d9d9;
      --bg:#f6f6f8;
      --panel:#ffffff;
      --panel-2:#f3f3f6;
      --ink:#1f1f1f;
      --ink-2:#5a5a5a;
      --accent:#3c6df0;
    }
    /* 앱 쉘 */
    body.light, body.dark { background: var(--bg); color: var(--ink); }
    .app-shell{
      padding: 16px;
    }
    @media (min-width:1024px){
      .app-shell{ padding: 16px 16px 16px calc(var(--chrome-gap-desktop) + 16px); }
    }

    .studio-bar{
      display:flex; align-items:center; gap:10px;
      background:var(--panel); border:1px solid var(--border);
      border-radius: var(--radius); padding:10px 12px; margin-bottom:12px;
    }
    .studio-title{ font-weight:700; letter-spacing:.3px }
    .studio-spacer{ flex:1 }
    .studio-btn{
      border:1px solid var(--border); background:var(--panel-2);
      border-radius:10px; padding:8px 12px; font-weight:600; cursor:pointer
    }
    .studio-btn:hover{ filter: brightness(1.05) }
    .studio-btn.primary{ border-color: transparent; background: var(--accent); color:#000; }
    .studio-badge{ font-size:.82rem; color:var(--ink-2) }

    /* 레이아웃 */
    .workbench{
      display:grid; gap: var(--panel-gap);
      grid-template-columns: 1fr;
    }
    @media (min-width:1024px){
      .workbench{
        grid-template-columns: 320px minmax(0,1fr) minmax(0,1fr);
        align-items: stretch;
      }
    }

    /* 좌측 선택창 (데스크탑 전용) */
    .selector{
      display:none;
      background:var(--panel); border:1px solid var(--border); border-radius: var(--radius);
      overflow:hidden;
    }
    @media (min-width:1024px){ .selector{ display:block } }
    .selector-header{
      padding:10px 12px; border-bottom:1px solid var(--border); font-weight:700
    }
    .selector-list{ display:flex; flex-direction:column }
    .selector-item{
      display:flex; align-items:center; gap:10px; padding:12px;
      border-bottom:1px dashed var(--border); cursor:pointer
    }
    .selector-item:last-child{ border-bottom:none }
    .selector-item.active{ background:rgba(127,127,127,.08) }

    /* 상단 탭 (모바일 전용) */
    .mobile-tabs{ display:flex; gap:6px; margin-bottom:10px }
    .mobile-tab{
      flex:1; border:1px solid var(--border); background:var(--panel); padding:10px; border-radius:10px; font-weight:600
    }
    .mobile-tab.active{ outline:2px solid var(--accent) }
    @media (min-width:1024px){ .mobile-tabs{ display:none } }

    /* 에디터 카드 */
    .editor-card{
      background:var(--panel); border:1px solid var(--border); border-radius: var(--radius);
      padding:12px; display:flex; flex-direction:column; gap:8px; min-height: 0;
    }
    .editor-tabs{ display:none } /* 데스크탑에선 숨김 */
    @media (max-width:1023.98px){ .editor-tabs{ display:flex; gap:6px } } /* 모바일에서만 보일 수 있지만, 실제 선택은 mobile-tabs에서 함 */

    .code-area{
      flex:1; min-height:240px;
    }
    textarea.code{
      width:100%; height:100%; border:1px solid var(--border); background:var(--panel-2);
      border-radius:10px; padding:12px; font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
      font-size:14px; color:var(--ink); outline:none; resize:vertical;
    }
    @media (min-width:1024px){
      textarea.code{ min-height: 620px; resize: none; }
    }

    /* 프리뷰 카드(가짜 브라우저 헤더 제거) */
    .preview-card{
      background:var(--panel); border:1px solid var(--border); border-radius: var(--radius);
      overflow:hidden; display:flex; flex-direction:column;
    }
    .preview-bar{
      display:flex; align-items:center; gap:8px; padding:10px 12px; border-bottom:1px solid var(--border);
    }
    .preview-addr{
      flex:1; border:1px solid var(--border); background:var(--panel-2);
      padding:6px 10px; border-radius:8px; font-size:12px; color:var(--ink-2)
    }
    #code-preview-frame{ width:100%; height:420px; border:0; background:var(--panel-2); }

    /* 상태바 */
    .statusbar{
      margin-top:12px; background:var(--panel); border:1px solid var(--border);
      border-radius: var(--radius); padding:8px 12px; display:flex; gap:12px; color:var(--ink-2); font-size:.9rem;
    }

    /* Assets 모달 */
    .modal-backdrop{
      position:fixed; inset:0; background:rgba(0,0,0,.5); display:none; align-items:center; justify-content:center; z-index: 9999;
    }
    .modal{
      width:min(680px, 92vw); background:var(--panel); border:1px solid var(--border); border-radius:14px; padding:16px;
    }
    .modal h3{ margin:0 0 8px 0 }
    .modal form{ display:grid; grid-template-columns: 1fr 110px 120px; gap:8px; align-items:center }
    .asset-list{ margin-top:10px; border-top:1px dashed var(--border); padding-top:10px; max-height: 40vh; overflow:auto }
    .asset-pill{ display:flex; gap:10px; align-items:center; border:1px solid var(--border); background:var(--panel-2); padding:8px 10px; border-radius:10px; margin-bottom:8px }
    .asset-pill code{ font-size:.85rem; color:var(--ink-2) }
    .tag{ font-size:.75rem; border:1px solid var(--border); padding:2px 6px; border-radius:999px }

    /* 가시성 유틸 */
    .hidden{ display:none !important; }

    /* === App 상단 여백 (헤더 피해서) === */
.app-shell{
  padding-top: calc(50px + 16px); /* 기존 16px에 +50px 추가 */
}
@media (min-width:1024px){
  .app-shell{
    padding: 16px 16px 16px calc(var(--chrome-gap-desktop) + 16px);
    padding-top: calc(50px + 16px); /* 데스크탑에서도 상단 여백 고정 */
  }
}

/* === Sidebar: 예쁜 VSCode 감성 복구 === */
.selector{
  background: linear-gradient(180deg, rgba(255,255,255,.03), rgba(255,255,255,0)) , var(--panel);
  border:1px solid var(--border);
  border-radius: 14px;
  overflow: hidden;
  box-shadow: var(--shadow, 0 10px 30px rgba(0,0,0,.35));
}

.selector-header{
  position: sticky; top: 0;
  backdrop-filter: blur(6px);
  background: linear-gradient(180deg, rgba(0,0,0,.06), rgba(0,0,0,0));
  padding: 12px 14px;
  border-bottom: 1px solid var(--border);
  font-weight: 700;
  letter-spacing: .2px;
}

.selector-list{
  display: flex; flex-direction: column;
  padding: 6px;
  gap: 6px;               /* 카드 사이 공간 */
  max-height: calc(100vh - 220px);
  overflow: auto;
}

/* 파일 아이템 카드 스타일 */
.selector-item{
  display: flex; align-items: center; gap: 10px;
  padding: 10px 12px;
  border: 1px solid transparent;
  border-radius: 10px;
  background: var(--panel-2);
  color: var(--ink-2);
  transition: border-color .15s ease, background .15s ease, color .15s ease, transform .05s;
}
.selector-item:hover{
  border-color: var(--border);
  color: var(--ink);
}
.selector-item:active{ transform: translateY(1px); }

/* 좌측 포커스/액티브 인디케이터 */
.selector-item.active{
  color: var(--ink);
  background: linear-gradient(180deg, rgba(124,158,255,.08), transparent), var(--panel-2);
  border-color: var(--accent);
  position: relative;
}
.selector-item.active::before{
  content: "";
  position: absolute; left: -6px; top: 8px; bottom: 8px;
  width: 3px;
  border-radius: 3px;
  background: var(--accent);
}

/* 파일명/뱃지 정돈 */
.selector-item strong{
  font-weight: 700; letter-spacing: .2px;
}
.selector-item .tag{
  margin-left: auto;
  font-size: .72rem;
  border: 1px solid var(--border);
  background: rgba(127,127,127,.08);
  padding: 2px 8px;
  border-radius: 999px;
  color: var(--ink-2);
}

/* 키보드 포커스 가시성 */
.selector-item:focus-visible{
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* 라이트 모드 미세 톤 보정 */
html:not(.dark) .selector{
  box-shadow: 0 10px 22px rgba(0,0,0,.08);
}
html:not(.dark) .selector-item{
  background: #fafafd;
}
html:not(.dark) .selector-item.active{
  background: linear-gradient(180deg, rgba(60,109,240,.08), transparent), #fff;
}

  </style>
</head>

<body class="light">
  <div id="preloader"><div class="spinner"></div></div>
  <%- include('partials/header') %>

  <div class="app-shell">
    <!-- 상단 앱 바 -->
    <div class="studio-bar">
      <div class="studio-title">Bug Loop · Online HTML Editor</div>
      <span class="studio-badge">Desktop-like UI</span>
      <div class="studio-spacer"></div>
      <button id="btn-run" class="studio-btn primary">Run ⏎</button>
      <button id="btn-assets" class="studio-btn">Assets</button>
      <button id="btn-theme" class="studio-btn">Theme</button>
      <button id="btn-download" class="studio-btn">Export</button>
    </div>

    <!-- 모바일 상단 탭 (모바일 전용) -->
    <div class="mobile-tabs" id="mobileTabs">
      <button class="mobile-tab active" data-tab="html">HTML</button>
      <button class="mobile-tab" data-tab="css">CSS</button>
      <button class="mobile-tab" data-tab="js">JS</button>
    </div>

    <!-- 작업영역 -->
    <div class="workbench">
      <!-- 좌측 선택창 (데스크탑 전용) -->
      <aside class="selector" id="desktopSelector">
        <div class="selector-header">Files</div>
        <div class="selector-list" role="tablist" aria-label="Editor files">
          <button class="selector-item active" data-tab="html"><strong>index.html</strong><span class="tag">HTML</span></button>
          <button class="selector-item" data-tab="css"><strong>styles.css</strong><span class="tag">CSS</span></button>
          <button class="selector-item" data-tab="js"><strong>app.js</strong><span class="tag">JS</span></button>
        </div>
      </aside>

      <!-- 가운데: 에디터 -->
      <section class="editor-card">
        <h1 class="code-preview-title"><%= locale.editor["editor-title"] %></h1>

        <div class="code-area">
          <!-- 에디터 3종 -->
          <div id="code-editor-html" class="editor-pane">
            <textarea id="code-preview-html-code" class="code">
<header>
  <%= locale.editor["example-html"] %>
</header>
            </textarea>
          </div>

          <div id="code-editor-css" class="editor-pane hidden">
            <textarea id="code-preview-css-code" class="code">body {
  background: #fff;
  color: #222;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  text-align: center;
  margin: 0;
  padding: 0;
}
header {
  background-color: #f0f4ff;
  padding: 20px 0;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
}
header h1 { margin: 0; color: #3366cc; }
nav ul {
  list-style: none; padding: 0; margin: 10px 0 0;
  display: flex; justify-content: center; gap: 20px;
}
nav li { font-weight: bold; color: #444; }
main { padding: 40px 20px; }
section { margin-bottom: 40px; }
h2 { color: #444; margin-bottom: 10px; }
ul { list-style: none; padding: 0; }
ul li { margin: 5px 0; font-size: 1.1rem; }
footer {
  background: #f9f9f9; padding: 20px 0; font-size: .9rem;
  color: #888; border-top: 1px solid #eee;
}
            </textarea>
          </div>

          <div id="code-editor-js" class="editor-pane hidden">
            <textarea id="code-preview-js-code" class="code">document.body.style.transform = 'scale(1.02)';</textarea>
          </div>
        </div>
      </section>

      <!-- 우측: 프리뷰 -->
      <section class="preview-card">
        <div class="preview-bar">
          <span class="studio-badge">Live Preview</span>
          <div class="preview-addr">bugloop://preview</div>
        </div>
        <iframe id="code-preview-frame" sandbox="allow-scripts allow-forms"></iframe>
      </section>
    </div>

    <!-- 상태바 -->
    <div class="statusbar">
      <span id="status-msg">Ready</span>
      <span>⌘/Ctrl+Enter: Run</span>
      <span>⌘/Ctrl+B: Toggle Sidebar</span>
    </div>
  </div>

  <!-- Assets 모달 -->
  <div class="modal-backdrop" id="assetsModal">
    <div class="modal">
      <h3>Assets</h3>
      <p class="studio-badge">CSS/JS를 추가하면 프리뷰 head에 자동 주입됩니다.</p>
      <form id="assetForm">
        <input id="assetUrl" type="url" placeholder="https://cdn.example.com/library.min.js 또는 .css" />
        <select id="assetType">
          <option value="js">JS</option>
          <option value="css">CSS</option>
        </select>
        <button type="submit" class="studio-btn primary">Add URL</button>
      </form>
      <div style="margin-top:8px; display:flex; gap:8px; align-items:center">
        <input type="file" id="assetFile" />
        <select id="assetFileType">
          <option value="js">JS</option>
          <option value="css">CSS</option>
        </select>
        <button id="assetAddFile" class="studio-btn">Add File</button>
        <div class="studio-spacer"></div>
        <button id="assetClose" class="studio-btn">Close</button>
      </div>
      <div class="asset-list" id="assetList"></div>
    </div>
  </div>

  <%- include('partials/scripts') %>
  <script>
    // ====== 요소 참조
    const htmlInput = document.getElementById('code-preview-html-code');
    const cssInput  = document.getElementById('code-preview-css-code');
    const jsInput   = document.getElementById('code-preview-js-code');
    const preview   = document.getElementById('code-preview-frame');

    const desktopSelector = document.getElementById('desktopSelector');
    const selectorItems = desktopSelector.querySelectorAll('.selector-item');

    const mobileTabs = document.getElementById('mobileTabs');
    const mobileTabButtons = mobileTabs.querySelectorAll('.mobile-tab');

    const btnRun = document.getElementById('btn-run');
    const btnTheme = document.getElementById('btn-theme');
    const btnDownload = document.getElementById('btn-download');

    const btnAssets = document.getElementById('btn-assets');
    const assetsModal = document.getElementById('assetsModal');
    const assetForm = document.getElementById('assetForm');
    const assetUrlEl = document.getElementById('assetUrl');
    const assetTypeEl = document.getElementById('assetType');
    const assetFileEl = document.getElementById('assetFile');
    const assetFileTypeEl = document.getElementById('assetFileType');
    const assetAddFileBtn = document.getElementById('assetAddFile');
    const assetListEl = document.getElementById('assetList');
    const assetClose = document.getElementById('assetClose');

    const statusMsg = document.getElementById('status-msg');

    // ====== 상태
    let currentTab = 'html'; // html | css | js
    const assets = []; // {id, type:'js'|'css', src, label, isBlob}

    // ====== 탭 전환 (데스크탑 선택창)
    selectorItems.forEach(btn=>{
      btn.addEventListener('click', ()=>{
        selectorItems.forEach(b=>b.classList.remove('active'));
        btn.classList.add('active');
        setTab(btn.dataset.tab);
      });
    });

    // ====== 모바일 탭
    mobileTabButtons.forEach(btn=>{
      btn.addEventListener('click', ()=>{
        mobileTabButtons.forEach(b=>b.classList.remove('active'));
        btn.classList.add('active');
        setTab(btn.dataset.tab);
        // 모바일에서 에디터만 보이므로 OK
      });
    });

    function setTab(tab){
      currentTab = tab;
      document.getElementById('code-editor-html').classList.toggle('hidden', tab!=='html');
      document.getElementById('code-editor-css').classList.toggle('hidden',  tab!=='css');
      document.getElementById('code-editor-js').classList.toggle('hidden',   tab!=='js');
      status('Editing ' + tab.toUpperCase());
    }

    // ====== 미리보기 빌드
    function buildSrcDoc(){
      const html = htmlInput.value;
      const cssContent = cssInput.value + `
@media screen and (max-width: 768px) {
  body { font-size: 80% !important; }
  h1, h2, h3, h4, h5, h6, p, li, nav, footer, main, section {
    transform: scale(0.95); transform-origin: top center;
  }
}
`;
      const cssTag = `<style>${cssContent.replace(/<\/style>/g,'<\\/style>')}</style>`;
      const jsTag  = `<script>${jsInput.value.replace(/<\/script>/g,'<\\/script>')}<\/script>`;

      // 자산 주입
      const assetTags = assets.map(a=>{
        if(a.type==='css'){
          return `<link rel="stylesheet" href="${a.src}">`;
        }else{
          return `<script src="${a.src}"><\/script>`;
        }
      }).join('\n');

      return `<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
${assetTags}
${cssTag}
</head>
<body>
${html}
${jsTag}
</body>
</html>`;
    }

    function updatePreview(){
      preview.srcdoc = buildSrcDoc();
      status('Preview updated');
    }

    // 입력 변경 → 자동 미리보기
    [htmlInput, cssInput, jsInput].forEach(el=> el.addEventListener('input', throttle(updatePreview, 250)));
    window.addEventListener('DOMContentLoaded', updatePreview);

    // ====== 단축키
    window.addEventListener('keydown', (e)=>{
      const cmd = e.metaKey || e.ctrlKey;
      if(cmd && e.key.toLowerCase()==='enter'){ e.preventDefault(); updatePreview(); }
      if(cmd && e.key.toLowerCase()==='b'){ e.preventDefault(); document.querySelector('.selector')?.classList.toggle('hidden'); }
    });

    // ====== Theme 토글
    btnTheme.addEventListener('click', ()=>{
      const html = document.documentElement;
      html.classList.toggle('dark');
      status(html.classList.contains('dark') ? 'Theme: Dark' : 'Theme: Light');
    });

    // ====== Export (현재 프리뷰를 단일 HTML로 다운로드)
    btnDownload.addEventListener('click', ()=>{
      const blob = new Blob([buildSrcDoc()], {type:'text/html'});
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url; a.download = 'bugloop_preview.html'; a.click();
      URL.revokeObjectURL(url);
      status('Exported bugloop_preview.html');
    });

    // ====== Assets: 모달 열기/닫기
    btnAssets.addEventListener('click', ()=> assetsModal.style.display='flex');
    assetClose.addEventListener('click', ()=> assetsModal.style.display='none');
    assetsModal.addEventListener('click', (e)=>{ if(e.target===assetsModal) assetsModal.style.display='none'; });

    // ====== Assets: URL 추가
    assetForm.addEventListener('submit', (e)=>{
      e.preventDefault();
      const url = assetUrlEl.value.trim();
      const type = assetTypeEl.value;
      if(!url) return;
      addAsset({type, src:url, label:url, isBlob:false});
      assetUrlEl.value='';
    });

    // ====== Assets: 파일 추가 (Blob URL)
    assetAddFileBtn.addEventListener('click', ()=>{
      const f = assetFileEl.files?.[0];
      if(!f) return;
      const type = assetFileTypeEl.value;
      const url = URL.createObjectURL(f);
      addAsset({type, src:url, label:f.name, isBlob:true});
      assetFileEl.value='';
    });

    function addAsset(a){
      const id = 'asset_'+Math.random().toString(36).slice(2,9);
      assets.push({...a, id});
      renderAssetList();
      updatePreview();
      status(`Asset added: ${a.label}`);
    }

    function removeAsset(id){
      const idx = assets.findIndex(x=>x.id===id);
      if(idx>=0){
        const a = assets[idx];
        if(a.isBlob) try{ URL.revokeObjectURL(a.src); }catch{}
        assets.splice(idx,1);
        renderAssetList();
        updatePreview();
        status('Asset removed');
      }
    }

    function renderAssetList(){
      assetListEl.innerHTML = '';
      assets.forEach(a=>{
        const row = document.createElement('div');
        row.className='asset-pill';
        row.innerHTML = `
          <span class="tag">${a.type.toUpperCase()}</span>
          <code title="${a.label}">${a.label}</code>
          <div class="studio-spacer"></div>
          <button class="studio-btn" data-id="${a.id}">Remove</button>
        `;
        row.querySelector('button').addEventListener('click', ()=> removeAsset(a.id));
        assetListEl.appendChild(row);
      });
      if(!assets.length){
        const empty = document.createElement('div');
        empty.className='studio-badge';
        empty.textContent = 'No assets added yet.';
        assetListEl.appendChild(empty);
      }
    }

    // ====== 유틸
    function throttle(fn, wait){
      let t=0; return function(...args){
        const now=Date.now(); if(now-t>wait){ t=now; fn.apply(this,args); }
      }
    }
    function status(msg){ statusMsg.textContent = msg; }

    // ====== 반응형 정책
    // 모바일: 상단 탭으로만 전환(이미 CSS로 좌측 selector 숨김). 데스크탑: selector만 사용.
    // setTab은 양쪽 입력에 공통 적용되니 로직은 그대로 둔다.
  </script>
</body>
</html>
