/* --- 기본 설정 --- */
html, body {
  scroll-behavior: smooth;
  margin: 0;
  padding: 0;
  font-family: 'Noto Sans KR', sans-serif;
  min-height: 100vh;
  box-sizing: border-box;
  overflow-x: hidden; /* 가로 스크롤 방지 */
  background: white;
  display: flex; /* body를 flex 컨테이너로 만들어 헤더/사이드바와 메인 콘텐츠를 배치 */
  flex-direction: column; /* 기본은 세로 정렬 */
}

/* --- 전체 헤더 + 사이드바 컨테이너 --- */
/* header.ejs의 최상위 부모입니다. 이곳에서 전체적인 레이아웃을 잡습니다. */
.full-header-container {
  display: flex; /* 헤더와 사이드바를 가로로 나란히 배치 */
  height: 100vh; /* 뷰포트 높이 전체를 차지 (사이드바가 고정되므로) */
  position: fixed; /* 전체 헤더 컨테이너를 고정 */
  top: 0;
  left: 0;
  width: 100%;
  z-index: 9000; /* 다른 콘텐츠 위에 오도록 */
}

/* --- 사이드 패널 묶음 (full-header-container의 자식) --- */
.side-panel.main-panel-only {
  display: flex; /* 아이콘 바와 확장 패널을 가로로 나란히 배치 */
  flex-shrink: 0; /* 크기 줄어들지 않도록 */
  background-color: #1e1e1e; /* 전체 사이드바 배경색 */
  /* height: 100vh; 는 이미 .full-header-container에 있으므로 제거 */
  /* z-index는 부모에 있으므로 제거하거나 낮게 설정 */
}

/* --- 아이콘 사이드바 --- */
.vscode-sidebar {
  width: 50px;
  background-color: #1e1e1e;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 10px;
  height: 100vh; /* 부모 .side-panel의 높이를 따르도록 100% 또는 제거 */
  z-index: 9990; /* 다른 요소보다 위에 오도록 */
}

.sidebar-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  color: #ccc;
  padding: 15px 0;
  width: 100%;
  text-decoration: none;
  font-size: 18px;
  transition: background 0.2s, color 0.2s;
  margin: 10px 0;
}

.sidebar-icon:hover {
  background-color: #333;
  color: #fff;
}

/* --- 확장된 패널 (아이콘바 옆에 붙음) --- */
.sidebar-extension-panel {
  width: 180px; /* 고정 너비 */
  background-color: #2c2f33;
  color: white;
  padding: 15px; /* 내부 패딩 조정 */
  border-left: 1px solid #444;
  display: flex;
  flex-direction: column;
  overflow-y: auto; /* 내용 넘칠 시 스크롤 */
  height: 100vh; /* 부모 .side-panel의 높이를 따르도록 100% 또는 제거 */
  z-index: 9490;
  flex-grow: 1; /* 남은 공간을 채우도록 */
}

.sidebar-extension-panel h3 {
  font-size: 14px;
  margin-bottom: 10px;
}

.sidebar-extension-panel ul {
  list-style: none;
  padding: 0;
  margin: 0;
  margin-bottom: 20px; /* 버튼들과 구분 위한 마진 */
}

.sidebar-extension-panel li {
  margin: 5px 0;
}

.sidebar-extension-panel a {
  color: white;
  text-decoration: none;
  font-size: 14px;
}

.sidebar-extension-panel a:hover {
  text-decoration: underline;
}

/* --- sidebar-wrapper는 사이드패널 내부에 flex 컨테이너 역할을 하므로, height 100% 유지 --- */
.sidebar-wrapper {
  display: flex;
  flex-direction: row;
  height: 100%;
}


/* --- 메인 레이아웃 (실제 콘텐츠가 들어갈 공간) --- */
/* 사이드바 너비만큼 왼쪽 마진을 줍니다. */
.main-layout {
  margin-left: 230px; /* 사이드바 (50px) + 확장 패널 (180px) = 230px */
  padding-top: 50px; /* 헤더의 높이만큼 패딩 추가 */
  flex-grow: 1; /* 남은 공간을 채우도록 */
  position: relative; /* z-index를 위해 */
  z-index: 100; /* 사이드바 아래로 가도록 */
  width: calc(100% - 230px); /* 너비 조정 */
}


/* --- 헤더 (full-header-container의 자식) --- */
.header-top {
  display: flex;
  align-items: center;
  justify-content: space-between; /* 양쪽 끝으로 정렬 */
  padding: 0.6rem 1rem;
  background-color: transparent; /* 배경색은 body나 main-layout에서 관리하도록 투명하게 */
  box-sizing: border-box;
  flex-shrink: 0;
  top: 0;
  position: sticky; /* 스크롤 시 상단 고정 (단, 부모 flex 컨테이너 내에서 sticky가 잘 동작하는지 확인 필요) */
  width: calc(100% - 230px); /* 사이드바 너비만큼 제외 */
  margin-left: 230px; /* 사이드바 너비만큼 왼쪽으로 밀기 */
  z-index: 5000;
  height: 50px; /* 헤더 높이 명시 */
}

.top-controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  flex-wrap: nowrap;
}

.left-controls {
  display: flex;
  flex-direction: column; /* 로고가 세로 정렬되도록 */
  align-items: flex-start;
  position: relative;
  flex: 1 1 auto;
  min-width: 0;
}

/* right-controls는 이제 header-top에서 비어있으므로, 필요없다면 제거해도 됩니다. */
/* .right-controls {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-left: auto;
  flex: 0 0 auto;
  white-space: nowrap;
} */

.floating-home-logo {
  height: auto;
  cursor: pointer;
  transition: opacity 0.2s ease;
  width: 120px; /* 데스크톱 기본 로고 크기 */
  position: static; /* 사이드바 안으로 들어가면 position:relative/absolute 불필요 */
  margin: 0; /* 기존 마진 제거 */
}

.floating-home-logo:hover {
  opacity: 0.9;
  transform: translateY(-2px);
}

/* --- 사이드바 내 유틸리티 버튼 스타일 --- */
/* auth-buttons, language-dropdown, light-switch는 이제 sidebar-extension-panel 안에 있습니다. */

.sidebar-extension-panel .auth-buttons {
  display: flex;
  flex-direction: column; /* 세로로 정렬 */
  gap: 8px; /* 버튼 사이 간격 */
  padding: 10px 0; /* 상하 패딩 */
  border-top: 1px solid #444; /* 구분선 */
  margin-top: auto; /* 하단으로 밀어냄 */
  margin-bottom: 10px; /* 하단 여백 */
}

.sidebar-extension-panel .auth-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 8px 10px; /* 패딩 조정 */
  font-size: 0.9rem; /* 폰트 크기 작게 */
  border-radius: 4px; /* 사각형에 가깝게 */
  text-decoration: none;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s;
  width: 100%; /* 너비를 꽉 채우도록 */
  box-sizing: border-box; /* 패딩이 너비에 포함되도록 */
}

/* 기본 회색 버튼 스타일 */
.sidebar-extension-panel .auth-btn.signup,
.sidebar-extension-panel .auth-btn.login,
.sidebar-extension-panel .auth-btn.logout,
.sidebar-extension-panel .auth-btn.write-post {
  background-color: #555; /* 어두운 회색 */
  color: white;
  border: 1px solid #666;
}

.sidebar-extension-panel .auth-btn.signup:hover,
.sidebar-extension-panel .auth-btn.login:hover,
.sidebar-extension-panel .auth-btn.logout:hover,
.sidebar-extension-panel .auth-btn.write-post:hover {
  background-color: #666; /* 호버 시 약간 밝게 */
  border-color: #777;
}

/* 특정 버튼 색상 오버라이드 (원하면) */
/* .sidebar-extension-panel .auth-btn.login { background-color: #007bff; border-color: #007bff; } */
/* .sidebar-extension-panel .auth-btn.login:hover { background-color: #0056b3; } */


.sidebar-extension-panel .welcome-text {
  font-size: 0.8rem;
  color: #aaa;
  text-align: center;
  margin-bottom: 5px; /* 버튼 위 여백 */
  white-space: normal; /* 한 줄에 다 안 들어오면 줄 바꿈 */
  position: static; /* 기존 절대 위치 제거 */
}

/* --- 언어 드롭다운 --- */
.sidebar-extension-panel .language-dropdown {
  position: static; /* 사이드바 내에서 상대적 위치 */
  margin-top: 15px;
  border-top: 1px solid #444; /* 구분선 */
  padding-top: 10px;
}

.sidebar-extension-panel .lang-btn {
  width: 100%;
  justify-content: space-between;
  display: flex;
  align-items: center;
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  padding: 5px 0;
  font-size: 0.9rem; /* 크기 조정 */
}

.sidebar-extension-panel .lang-menu {
  display: none;
  list-style: none;
  position: static; /* 사이드바 내에서 고정 해제 */
  background: #3a3f44; /* 사이드바 배경과 어울리는 색상 */
  border: none;
  box-shadow: none;
  padding: 5px 0;
  width: 100%; /* 부모 너비에 맞춤 */
}

.sidebar-extension-panel .lang-option {
  color: white;
  padding: 5px 10px;
  display: block;
  text-decoration: none;
  font-size: 0.9rem; /* 크기 조정 */
}

.sidebar-extension-panel .lang-option:hover {
  background-color: #4a4f54; /* 호버 색상 */
}

/* --- 다크 모드 토글 --- */
.sidebar-extension-panel .light-switch {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
  border-top: 1px solid #444; /* 구분선 */
  margin-top: 15px;
  cursor: pointer;
  color: white;
  font-size: 0.9rem; /* 크기 조정 */
  width: 100%; /* 부모 너비에 맞춤 */
}

/* --- 기존 헤더 스타일 (불필요한 부분 제거/수정) --- */

/* 이전에 right-controls가 Header-top에 있을 때의 스타일은 제거 */
/* @media (max-width: 640px) { ... .auth-buttons, .welcome-text, .light-switch 관련 스타일 ... } */

/* .header-top의 position:sticky는 이제 .full-header-container가 fixed이므로 제거 */
/* .header-top은 이제 .main-layout 옆에 가로로 배치될 것이므로,
   독립적인 z-index보다는 레이아웃 컨텍스트 내에서 관리하는 것이 좋습니다.
   여기서는 .full-header-container의 자식으로 배치했으므로,
   실제로는 .header-top이 아니라 .main-layout의 padding-top이 중요합니다. */

/* 이 부분은 삭제하거나, 필요한 경우 재정의해야 합니다. */
/* .auth-buttons {
  display: flex;
  align-items: center;
  gap: 6px;
  font-weight: 100;
  letter-spacing: -0.5px;
  white-space: nowrap;
  padding: 0.3rem 0.5rem;
} */
/* welcome-text, auth-btn 등 header-top에 있던 스타일 제거 (위에서 사이드바용으로 재정의) */

/* --- 그 외 기존 CSS 유지 --- */
.logo-link {
  /* 로고 링크 스타일 */
}
/* ... 기존 로고, 검색창, 푸터, 햄버거 메뉴, 모바일 메뉴, 프리로더 등 나머지 스타일은 그대로 유지 ... */
/* 단, .login-box는 여전히 header.ejs 안에 있으므로 .header-top의 자식으로 적절히 배치되도록 포지셔닝 확인 */

/* 모바일 미디어 쿼리 조정 */
@media (max-width: 640px) {
  /* 모바일에서는 사이드바를 숨기고, 헤더를 전체 너비로 만듭니다. */
  .full-header-container {
    position: static; /* 모바일에서는 고정 해제 */
    height: auto;
    display: block; /* 블록으로 변경하여 사이드바와 헤더가 세로로 쌓이도록 */
    z-index: 1; /* 기본 z-index로 변경 */
  }

  .side-panel.main-panel-only {
    display: none; /* 모바일에서 사이드바 숨기기 */
  }

  .main-layout {
    margin-left: 0; /* 사이드바 마진 제거 */
    padding-top: 0; /* 헤더 패딩 제거 (모바일 헤더 스타일링에 따라 다름) */
    width: 100%; /* 전체 너비 */
  }

  .header-top {
    position: sticky; /* 모바일 헤더는 상단 고정 */
    width: 100%; /* 전체 너비 */
    margin-left: 0; /* 마진 제거 */
    padding-left: 3rem; /* 햄버거 버튼 공간 확보 */
  }

  /* 기존 모바일 헤더/버튼 스타일을 다시 활성화하거나 조정 */
  .auth-buttons { /* 이 클래스는 이제 사이드바에 있으므로, 모바일 메뉴에서 별도로 구현하지 않는 한 필요 없습니다. */
    display: none; /* 원래 헤더에 있던 auth-buttons 숨김 */
  }
  .language-dropdown { /* 원래 헤더에 있던 language-dropdown 숨김 */
    display: none;
  }
  .light-switch { /* 원래 헤더에 있던 light-switch 숨김 */
    display: none;
  }
  /* mobile-menu는 기존대로 동작하도록 합니다. */
  /* mobile-menu에 로그인/언어/다크모드 기능 넣을지는 별도 고려 */

  .hamburger {
    display: flex; /* 햄버거 버튼 모바일에서 보이기 */
  }

  /* .mobile-search-results, .login-box 등의 모바일 스타일은 그대로 유지 */
}

/* HTML dark 클래스에 따른 스타일 (기존 유지) */
html.dark .lang-menu {
  background: #222;
  border-color: #444;
  box-shadow: 0 2px 6px rgba(255, 255, 255, 0.05);
}

html.dark .lang-option {
  color: #eee;
}

html.dark .lang-option:hover {
  background-color: #333;
}

html.dark .lang-btn i {
  color: #ffffff; /* 원하는 색상으로 변경 */
}